class InteractionsInputView extends inkLogicController
{
	private editable var m_TopArrowRef : inkWidgetRef;
	private editable var m_BotArrowRef : inkWidgetRef;
	private editable var m_InputImage : inkImageRef;
	private var m_ShowArrows : Bool;
	default m_ShowArrows = true;
	private var m_HasAbove : Bool;
	private var m_HasBelow : Bool;
	private var m_CurrentNum : Int32;
	private var m_AllItemsNum : Int32;
	private editable var m_DefaultInputPartName : CName;

	public function Setup( visible : Bool, currentNum : Int32, allItemsNum : Int32, hasAbove : Bool, hasBelow : Bool )
	{
		SetVisible( visible );
		Setup( currentNum, allItemsNum, hasAbove, hasBelow );
	}

	public function Setup( currentNum : Int32, allItemsNum : Int32, hasAbove : Bool, hasBelow : Bool )
	{
		m_CurrentNum = currentNum;
		m_AllItemsNum = allItemsNum;
		m_HasAbove = hasAbove;
		m_HasBelow = hasBelow;
		RefreshView();
	}

	public function SetVisible( visible : Bool )
	{
		GetRootWidget().SetVisible( visible );
	}

	public function ShowArrows( show : Bool )
	{
		m_ShowArrows = show;
		RefreshView();
	}

	private function RefreshView()
	{
		inkWidgetRef.SetVisible( m_TopArrowRef, ( ( m_CurrentNum != 0 ) || m_HasAbove ) && m_ShowArrows );
		inkWidgetRef.SetVisible( m_BotArrowRef, ( ( m_CurrentNum != ( m_AllItemsNum - 1 ) ) || m_HasBelow ) && m_ShowArrows );
	}

	public function SetInputButton( inputPartName : CName )
	{
		inkImageRef.SetTexturePart( m_InputImage, inputPartName );
	}

	public function ResetInputButton()
	{
		inkImageRef.SetTexturePart( m_InputImage, m_DefaultInputPartName );
	}

}

