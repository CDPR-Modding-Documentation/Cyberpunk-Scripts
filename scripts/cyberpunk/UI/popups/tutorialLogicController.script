class TutorialPopupDisplayController extends inkLogicController
{
	protected editable var m_title : inkTextRef;
	protected editable var m_message : inkTextRef;
	protected editable var m_image : inkImageRef;
	protected editable var m_video_1360x768 : inkVideoRef;
	protected editable var m_video_1024x576 : inkVideoRef;
	protected editable var m_video_1280x720 : inkVideoRef;
	protected editable var m_video_720x405 : inkVideoRef;
	protected editable var m_inputHint : inkWidgetRef;

	public function SetData( data : TutorialPopupData )
	{
		inkTextRef.SetText( m_title, data.title );
		inkTextRef.SetText( m_message, data.message );
		SetVideoData( data.videoType, data.video );
		if( TDBID.IsValid( data.imageId ) )
		{
			inkImageRef.SetVisible( m_image, true );
			InkImageUtils.RequestSetImage( this, m_image, data.imageId );
		}
		else
		{
			inkImageRef.SetVisible( m_image, false );
		}
		inkWidgetRef.SetVisible( m_inputHint, data.closeAtInput );
	}

	private function SetVideoData( videoType : VideoType, video : ResRef )
	{
		inkVideoRef.SetVisible( m_video_1360x768, false );
		inkVideoRef.SetVisible( m_video_1024x576, false );
		inkVideoRef.SetVisible( m_video_1280x720, false );
		inkVideoRef.SetVisible( m_video_720x405, false );
		switch( videoType )
		{
			case VideoType.Tutorial_720x405:
				PlayVideo( m_video_720x405, video );
			break;
			case VideoType.Tutorial_1024x576:
				PlayVideo( m_video_1024x576, video );
			break;
			case VideoType.Tutorial_1280x720:
				PlayVideo( m_video_1280x720, video );
			break;
			case VideoType.Tutorial_1360x768:
				PlayVideo( m_video_1360x768, video );
			break;
			default:
				break;
		}
	}

	private function PlayVideo( videoWidget : inkVideoRef, video : ResRef )
	{
		inkVideoRef.Stop( videoWidget );
		inkVideoRef.SetVideoPath( videoWidget, video );
		inkVideoRef.SetLoop( videoWidget, true );
		inkVideoRef.Play( videoWidget );
		inkVideoRef.SetVisible( videoWidget, true );
	}

}

