class CraftingNotificationViewData extends GenericNotificationViewData
{
	var m_canBeMerged : Bool;

	public override function CanMerge( data : GenericNotificationViewData ) : Bool
	{
		return m_canBeMerged;
	}

}

class CraftingNotificationQueue extends gameuiGenericNotificationGameController
{
	private editable var m_duration : Float;
	default m_duration = 2.0f;

	public override function GetShouldSaveState() : Bool
	{
		return false;
	}

	public override function GetID() : Int32
	{
		return ( ( Int32 )( GenericNotificationType.CraftingNotification ) );
	}

	protected event OnCraftingNotification( evt : CraftingNotificationEvent )
	{
		var notificationData : gameuiGenericNotificationData;
		var userData : CraftingNotificationViewData;
		var title : String;
		switch( evt.notificationType )
		{
			case CraftingNotificationType.NoPerks:
				title = ( GetLocalizedText( "UI-Notifications-CraftingNotEnoughPerks" ) + " " ) + GetLocalizedText( evt.perkName );
			break;
			case CraftingNotificationType.NotEnoughMaterial:
				title = "UI-Notifications-CraftingNotEnoughMaterials";
			break;
		}
		userData = new CraftingNotificationViewData;
		userData.title = title;
		userData.soundEvent = 'QuestSuccessPopup';
		userData.soundAction = 'OnOpen';
		userData.m_canBeMerged = true;
		notificationData.time = m_duration;
		notificationData.widgetLibraryItemName = 'crafting_notification';
		notificationData.notificationData = userData;
		AddNewNotificationData( notificationData );
	}

}

class CraftingNotification extends GenericNotificationController
{
	private var m_introAnimation : inkAnimProxy;

	protected event OnInitialize()
	{
		m_introAnimation = PlayLibraryAnimation( 'crafting_notification' );
	}

	protected event OnUnitialize()
	{
		m_introAnimation.Stop();
	}

}

class CraftingNotificationEvent extends Event
{
	var notificationType : CraftingNotificationType;
	var perkName : String;
}

enum CraftingNotificationType
{
	NoPerks = 0,
	NotEnoughMaterial = 1,
}

