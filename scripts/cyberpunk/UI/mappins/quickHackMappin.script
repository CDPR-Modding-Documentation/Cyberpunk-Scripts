class QuickHackMappinController extends BaseInteractionMappinController
{
	private editable var m_bar : inkWidgetRef;
	private editable var m_header : inkTextRef;
	private editable var m_iconWidgetActive : inkImageRef;
	private var m_rootWidget : weak< inkWidget >;
	private var m_mappin : weak< IMappin >;
	private var m_data : GameplayRoleMappinData;

	protected event OnInitialize()
	{
		m_rootWidget = GetRootWidget();
	}

	protected event OnIntro()
	{
		m_mappin = GetMappin();
		m_data = GetVisualData();
		HelperSetIcon( iconWidget, m_data.m_textureID );
		HelperSetIcon( m_iconWidgetActive, m_data.m_textureID );
		UpdateView();
	}

	protected event OnNameplate( isNameplateVisible : Bool, nameplateController : weak< NpcNameplateGameController > )
	{
		if( isNameplateVisible )
		{
			SetProjectToScreenSpace( false );
		}
		else
		{
			SetProjectToScreenSpace( true );
		}
	}

	private export function OnStatsDataUpdated( progress : Float )
	{
		m_data = GetVisualData();
		if( m_data.m_progressBarType == EProgressBarType.UPLOAD )
		{
			inkWidgetRef.SetScale( m_bar, Vector2( 2.0, progress ) );
		}
		else if( m_data.m_progressBarType == EProgressBarType.DURATION )
		{
			inkWidgetRef.SetScale( m_bar, Vector2( 2.0, 1.0 - progress ) );
		}
		UpdateView();
	}

	private function UpdateView()
	{
		if( m_data.m_progressBarContext == EProgressBarContext.QuickHack )
		{
			if( m_data.m_progressBarType == EProgressBarType.UPLOAD )
			{
				inkTextRef.SetText( m_header, "LocKey#11047" );
				m_rootWidget.SetState( 'Upload' );
			}
			else if( m_data.m_progressBarType == EProgressBarType.DURATION )
			{
				inkTextRef.SetText( m_header, "LocKey#11048" );
				m_rootWidget.SetState( 'Default' );
			}
		}
		else if( m_data.m_progressBarContext == EProgressBarContext.PhoneCall )
		{
			inkTextRef.SetText( m_header, "LocKey#2142" );
			m_rootWidget.SetState( 'Default' );
		}
	}

	public const override function GetVisualData() : GameplayRoleMappinData
	{
		var data : GameplayRoleMappinData;
		data = ( ( GameplayRoleMappinData )( m_mappin.GetScriptData() ) );
		return data;
	}

	private function HelperSetIcon( currImage : inkImageRef, iconID : TweakDBID )
	{
		if( TDBID.IsValid( iconID ) )
		{
			SetTexture( currImage, iconID );
		}
	}

}

