class DisassembleAction extends BaseItemAction
{

	public override function CompleteAction( gameInstance : GameInstance )
	{
		var disassembleRequest : DisassembleItemRequest;
		var i, j : Int32;
		var rewards : array< weak< RewardBase_Record > >;
		var actionEffects : array< weak< ObjectActionEffect_Record > >;
		var actionRecord : ObjectAction_Record;
		if( GetItemData().HasTag( 'UnequipBlocked' ) || GetItemData().HasTag( 'Quest' ) )
		{
			return;
		}
		if( EquipmentSystem.GetInstance( GetExecutor() ).IsEquipped( GetExecutor(), GetItemData().GetID() ) )
		{
			return;
		}
		actionRecord = GetObjectActionRecord();
		if( actionRecord )
		{
			actionRecord.Rewards( rewards );
		}
		for( i = 0; i < rewards.Size(); i += 1 )
		{
			for( j = 0; j < GetRequestQuantity(); j += 1 )
			{
				RPGManager.GiveReward( gameInstance, rewards[ i ].GetID(), GetRequesterID() );
			}
		}
		if( actionRecord )
		{
			actionRecord.CompletionEffects( actionEffects );
		}
		ProcessStatusEffects( actionEffects, gameInstance );
		ProcessEffectors( actionEffects, gameInstance );
		disassembleRequest = new DisassembleItemRequest;
		disassembleRequest.target = GetExecutor();
		disassembleRequest.itemID = GetItemData().GetID();
		disassembleRequest.amount = GetRequestQuantity();
		CraftingSystem.GetInstance( gameInstance ).QueueRequest( disassembleRequest );
	}

}

