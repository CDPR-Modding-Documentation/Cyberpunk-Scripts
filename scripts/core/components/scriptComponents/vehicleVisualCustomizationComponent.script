struct vehicleVisualCustomizationPersistentData
{
	persistent var ID : TweakDBID;
	persistent var visualCustomizationData : vehicleVisualModdingDefinition;
}

class StoreVisualCustomizationDataForIDEvent extends Event
{
	var ID : TweakDBID;
	var definition : vehicleVisualModdingDefinition;
}

class vehicleVisualCustomizationComponent extends GameComponent
{

	public function RetriveVisualCustomizationDefinitionForID( ID : TweakDBID ) : vehicleVisualModdingDefinition
	{
		var definition : vehicleVisualModdingDefinition;
		GetMyPS().GetDataForVehicleWithID( ID, definition );
		return definition;
	}

	protected event OnStoreVisualCustomizationDataForIDEvent( evt : StoreVisualCustomizationDataForIDEvent )
	{
		GetMyPS().StoreCustomizationData( evt.ID, evt.definition );
	}

	private const function GetOwner() : GameObject
	{
		return ( ( GameObject )( GetEntity() ) );
	}

	private const function GetMyPS() : vehicleVisualCustomizationComponentPS
	{
		return ( ( vehicleVisualCustomizationComponentPS )( GetPS() ) );
	}

}

class vehicleVisualCustomizationComponentPS extends GameComponentPS
{
	private persistent var m_storedVisualCustomizationData : array< vehicleVisualCustomizationPersistentData >;

	public function StoreCustomizationData( ID : TweakDBID, data : vehicleVisualModdingDefinition )
	{
		var dataPackage : vehicleVisualCustomizationPersistentData;
		var i : Int32;
		var checkedID : TweakDBID;
		while( i < m_storedVisualCustomizationData.Size() )
		{
			checkedID = m_storedVisualCustomizationData[ i ].ID;
			if( checkedID == ID )
			{
				m_storedVisualCustomizationData[ i ].visualCustomizationData = data;
				return;
			}
			i += 1;
		}
		dataPackage.ID = ID;
		dataPackage.visualCustomizationData = data;
		m_storedVisualCustomizationData.PushBack( dataPackage );
	}

	public function GetDataForVehicleWithID( ID : TweakDBID, out data : vehicleVisualModdingDefinition ) : Bool
	{
		var i : Int32;
		var checkedID : TweakDBID;
		if( m_storedVisualCustomizationData.Size() == 0 )
		{
			return false;
		}
		while( i < m_storedVisualCustomizationData.Size() )
		{
			checkedID = m_storedVisualCustomizationData[ i ].ID;
			if( checkedID == ID )
			{
				data = m_storedVisualCustomizationData[ i ].visualCustomizationData;
				return true;
			}
			i += 1;
		}
		return false;
	}

}

