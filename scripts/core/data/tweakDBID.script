importonly struct TDBID
{
	public import static function Create( str : String ) : TweakDBID;
	public import static function IsValid( tdbID : TweakDBID ) : Bool;
	public import static function Prepend( out tdbID : TweakDBID, toPrepend : TweakDBID );
	public import static function Append( out tdbID : TweakDBID, toAppend : TweakDBID );
	public import static function ToNumber( tdbID : TweakDBID ) : Uint64;
	public import static function None() : TweakDBID;
	public import static function ToStringDEBUG( tdbID : TweakDBID ) : String;
	public import static function OpenRecordInVSCode( tdbID : TweakDBID ) : Bool;
}

import operator+( a : TweakDBID, b : TweakDBID ) : TweakDBID;
import operator+=( out a : TweakDBID, b : TweakDBID ) : TweakDBID;
import operator==( a : TweakDBID, b : TweakDBID ) : Bool;
import operator!=( a : TweakDBID, b : TweakDBID ) : Bool;

operator!( a : TweakDBID ) : Bool
{
	return !( TDBID.IsValid( a ) );
}

