import operator+( a : Int8, b : Int8 ) : Int8;
import operator-( a : Int8, b : Int8 ) : Int8;
import operator*( a : Int8, b : Int8 ) : Int8;
import operator/( a : Int8, b : Int8 ) : Int8;
import operator%( a : Int8, b : Int8 ) : Int8;
import operator-( a : Int8 ) : Int8;
import operator&( a : Int8, b : Int8 ) : Int8;
import operator|( a : Int8, b : Int8 ) : Int8;
import operator^( a : Int8, b : Int8 ) : Int8;
import operator~( a : Int8 ) : Int8;
import operator==( a : Int8, b : Int8 ) : Bool;
import operator!=( a : Int8, b : Int8 ) : Bool;
import operator<( a : Int8, b : Int8 ) : Bool;
import operator<=( a : Int8, b : Int8 ) : Bool;
import operator>( a : Int8, b : Int8 ) : Bool;
import operator>=( a : Int8, b : Int8 ) : Bool;
import operator+=( out a : Int8, b : Int8 ) : Int8;
import operator-=( out a : Int8, b : Int8 ) : Int8;
import operator*=( out a : Int8, b : Int8 ) : Int8;
import operator/=( out a : Int8, b : Int8 ) : Int8;
import operator|=( out a : Int8, b : Int8 ) : Int8;
import operator&=( out a : Int8, b : Int8 ) : Int8;
import operator+( a : Uint8, b : Uint8 ) : Uint8;
import operator-( a : Uint8, b : Uint8 ) : Uint8;
import operator*( a : Uint8, b : Uint8 ) : Uint8;
import operator/( a : Uint8, b : Uint8 ) : Uint8;
import operator%( a : Uint8, b : Uint8 ) : Uint8;
import operator&( a : Uint8, b : Uint8 ) : Uint8;
import operator|( a : Uint8, b : Uint8 ) : Uint8;
import operator^( a : Uint8, b : Uint8 ) : Uint8;
import operator~( a : Uint8 ) : Uint8;
import operator==( a : Uint8, b : Uint8 ) : Bool;
import operator!=( a : Uint8, b : Uint8 ) : Bool;
import operator<( a : Uint8, b : Uint8 ) : Bool;
import operator<=( a : Uint8, b : Uint8 ) : Bool;
import operator>( a : Uint8, b : Uint8 ) : Bool;
import operator>=( a : Uint8, b : Uint8 ) : Bool;
import operator+=( out a : Uint8, b : Uint8 ) : Uint8;
import operator-=( out a : Uint8, b : Uint8 ) : Uint8;
import operator*=( out a : Uint8, b : Uint8 ) : Uint8;
import operator/=( out a : Uint8, b : Uint8 ) : Uint8;
import operator|=( out a : Uint8, b : Uint8 ) : Uint8;
import operator&=( out a : Uint8, b : Uint8 ) : Uint8;
import operator+( a : Int16, b : Int16 ) : Int16;
import operator-( a : Int16, b : Int16 ) : Int16;
import operator*( a : Int16, b : Int16 ) : Int16;
import operator/( a : Int16, b : Int16 ) : Int16;
import operator%( a : Int16, b : Int16 ) : Int16;
import operator-( a : Int16 ) : Int16;
import operator&( a : Int16, b : Int16 ) : Int16;
import operator|( a : Int16, b : Int16 ) : Int16;
import operator^( a : Int16, b : Int16 ) : Int16;
import operator~( a : Int16 ) : Int16;
import operator==( a : Int16, b : Int16 ) : Bool;
import operator!=( a : Int16, b : Int16 ) : Bool;
import operator<( a : Int16, b : Int16 ) : Bool;
import operator<=( a : Int16, b : Int16 ) : Bool;
import operator>( a : Int16, b : Int16 ) : Bool;
import operator>=( a : Int16, b : Int16 ) : Bool;
import operator+=( out a : Int16, b : Int16 ) : Int16;
import operator-=( out a : Int16, b : Int16 ) : Int16;
import operator*=( out a : Int16, b : Int16 ) : Int16;
import operator/=( out a : Int16, b : Int16 ) : Int16;
import operator|=( out a : Int16, b : Int16 ) : Int16;
import operator&=( out a : Int16, b : Int16 ) : Int16;
import operator+( a : Uint16, b : Uint16 ) : Uint16;
import operator-( a : Uint16, b : Uint16 ) : Uint16;
import operator*( a : Uint16, b : Uint16 ) : Uint16;
import operator/( a : Uint16, b : Uint16 ) : Uint16;
import operator%( a : Uint16, b : Uint16 ) : Uint16;
import operator&( a : Uint16, b : Uint16 ) : Uint16;
import operator|( a : Uint16, b : Uint16 ) : Uint16;
import operator^( a : Uint16, b : Uint16 ) : Uint16;
import operator~( a : Uint16 ) : Uint16;
import operator==( a : Uint16, b : Uint16 ) : Bool;
import operator!=( a : Uint16, b : Uint16 ) : Bool;
import operator<( a : Uint16, b : Uint16 ) : Bool;
import operator<=( a : Uint16, b : Uint16 ) : Bool;
import operator>( a : Uint16, b : Uint16 ) : Bool;
import operator>=( a : Uint16, b : Uint16 ) : Bool;
import operator+=( out a : Uint16, b : Uint16 ) : Uint16;
import operator-=( out a : Uint16, b : Uint16 ) : Uint16;
import operator*=( out a : Uint16, b : Uint16 ) : Uint16;
import operator/=( out a : Uint16, b : Uint16 ) : Uint16;
import operator|=( out a : Uint16, b : Uint16 ) : Uint16;
import operator&=( out a : Uint16, b : Uint16 ) : Uint16;
import operator+( a : Int32, b : Int32 ) : Int32;
import operator-( a : Int32, b : Int32 ) : Int32;
import operator*( a : Int32, b : Int32 ) : Int32;
import operator/( a : Int32, b : Int32 ) : Int32;
import operator%( a : Int32, b : Int32 ) : Int32;
import operator-( a : Int32 ) : Int32;
import operator&( a : Int32, b : Int32 ) : Int32;
import operator|( a : Int32, b : Int32 ) : Int32;
import operator^( a : Int32, b : Int32 ) : Int32;
import operator~( a : Int32 ) : Int32;
import operator==( a : Int32, b : Int32 ) : Bool;
import operator!=( a : Int32, b : Int32 ) : Bool;
import operator<( a : Int32, b : Int32 ) : Bool;
import operator<=( a : Int32, b : Int32 ) : Bool;
import operator>( a : Int32, b : Int32 ) : Bool;
import operator>=( a : Int32, b : Int32 ) : Bool;
import operator+=( out a : Int32, b : Int32 ) : Int32;
import operator-=( out a : Int32, b : Int32 ) : Int32;
import operator*=( out a : Int32, b : Int32 ) : Int32;
import operator/=( out a : Int32, b : Int32 ) : Int32;
import operator|=( out a : Int32, b : Int32 ) : Int32;
import operator&=( out a : Int32, b : Int32 ) : Int32;
import operator+( a : Uint32, b : Uint32 ) : Uint32;
import operator-( a : Uint32, b : Uint32 ) : Uint32;
import operator*( a : Uint32, b : Uint32 ) : Uint32;
import operator/( a : Uint32, b : Uint32 ) : Uint32;
import operator%( a : Uint32, b : Uint32 ) : Uint32;
import operator&( a : Uint32, b : Uint32 ) : Uint32;
import operator|( a : Uint32, b : Uint32 ) : Uint32;
import operator^( a : Uint32, b : Uint32 ) : Uint32;
import operator~( a : Uint32 ) : Uint32;
import operator==( a : Uint32, b : Uint32 ) : Bool;
import operator!=( a : Uint32, b : Uint32 ) : Bool;
import operator<( a : Uint32, b : Uint32 ) : Bool;
import operator<=( a : Uint32, b : Uint32 ) : Bool;
import operator>( a : Uint32, b : Uint32 ) : Bool;
import operator>=( a : Uint32, b : Uint32 ) : Bool;
import operator+=( out a : Uint32, b : Uint32 ) : Uint32;
import operator-=( out a : Uint32, b : Uint32 ) : Uint32;
import operator*=( out a : Uint32, b : Uint32 ) : Uint32;
import operator/=( out a : Uint32, b : Uint32 ) : Uint32;
import operator|=( out a : Uint32, b : Uint32 ) : Uint32;
import operator&=( out a : Uint32, b : Uint32 ) : Uint32;
import operator+( a : Int64, b : Int64 ) : Int64;
import operator-( a : Int64, b : Int64 ) : Int64;
import operator*( a : Int64, b : Int64 ) : Int64;
import operator/( a : Int64, b : Int64 ) : Int64;
import operator%( a : Int64, b : Int64 ) : Int64;
import operator-( a : Int64 ) : Int64;
import operator&( a : Int64, b : Int64 ) : Int64;
import operator|( a : Int64, b : Int64 ) : Int64;
import operator^( a : Int64, b : Int64 ) : Int64;
import operator~( a : Int64 ) : Int64;
import operator==( a : Int64, b : Int64 ) : Bool;
import operator!=( a : Int64, b : Int64 ) : Bool;
import operator<( a : Int64, b : Int64 ) : Bool;
import operator<=( a : Int64, b : Int64 ) : Bool;
import operator>( a : Int64, b : Int64 ) : Bool;
import operator>=( a : Int64, b : Int64 ) : Bool;
import operator+=( out a : Int64, b : Int64 ) : Int64;
import operator-=( out a : Int64, b : Int64 ) : Int64;
import operator*=( out a : Int64, b : Int64 ) : Int64;
import operator/=( out a : Int64, b : Int64 ) : Int64;
import operator|=( out a : Int64, b : Int64 ) : Int64;
import operator&=( out a : Int64, b : Int64 ) : Int64;
import operator+( a : Uint64, b : Uint64 ) : Uint64;
import operator-( a : Uint64, b : Uint64 ) : Uint64;
import operator*( a : Uint64, b : Uint64 ) : Uint64;
import operator/( a : Uint64, b : Uint64 ) : Uint64;
import operator%( a : Uint64, b : Uint64 ) : Uint64;
import operator&( a : Uint64, b : Uint64 ) : Uint64;
import operator|( a : Uint64, b : Uint64 ) : Uint64;
import operator^( a : Uint64, b : Uint64 ) : Uint64;
import operator~( a : Uint64 ) : Uint64;
import operator==( a : Uint64, b : Uint64 ) : Bool;
import operator!=( a : Uint64, b : Uint64 ) : Bool;
import operator<( a : Uint64, b : Uint64 ) : Bool;
import operator<=( a : Uint64, b : Uint64 ) : Bool;
import operator>( a : Uint64, b : Uint64 ) : Bool;
import operator>=( a : Uint64, b : Uint64 ) : Bool;
import operator+=( out a : Uint64, b : Uint64 ) : Uint64;
import operator-=( out a : Uint64, b : Uint64 ) : Uint64;
import operator*=( out a : Uint64, b : Uint64 ) : Uint64;
import operator/=( out a : Uint64, b : Uint64 ) : Uint64;
import operator|=( out a : Uint64, b : Uint64 ) : Uint64;
import operator&=( out a : Uint64, b : Uint64 ) : Uint64;
import operator+( a : Float, b : Float ) : Float;
import operator-( a : Float, b : Float ) : Float;
import operator*( a : Float, b : Float ) : Float;
import operator/( a : Float, b : Float ) : Float;
import operator%( a : Float, b : Float ) : Float;
import operator-( a : Float ) : Float;
import operator==( a : Float, b : Float ) : Bool;
import operator!=( a : Float, b : Float ) : Bool;
import operator<( a : Float, b : Float ) : Bool;
import operator<=( a : Float, b : Float ) : Bool;
import operator>( a : Float, b : Float ) : Bool;
import operator>=( a : Float, b : Float ) : Bool;
import operator+=( out a : Float, b : Float ) : Float;
import operator-=( out a : Float, b : Float ) : Float;
import operator*=( out a : Float, b : Float ) : Float;
import operator/=( out a : Float, b : Float ) : Float;
import operator+( a : Double, b : Double ) : Double;
import operator-( a : Double, b : Double ) : Double;
import operator*( a : Double, b : Double ) : Double;
import operator/( a : Double, b : Double ) : Double;
import operator%( a : Double, b : Double ) : Double;
import operator-( a : Double ) : Double;
import operator==( a : Double, b : Double ) : Bool;
import operator!=( a : Double, b : Double ) : Bool;
import operator<( a : Double, b : Double ) : Bool;
import operator<=( a : Double, b : Double ) : Bool;
import operator>( a : Double, b : Double ) : Bool;
import operator>=( a : Double, b : Double ) : Bool;
import operator+=( out a : Double, b : Double ) : Double;
import operator-=( out a : Double, b : Double ) : Double;
import operator*=( out a : Double, b : Double ) : Double;
import operator/=( out a : Double, b : Double ) : Double;
import operator&&( a : Bool, skip b : Bool ) : Bool;
import operator||( a : Bool, skip b : Bool ) : Bool;
import operator!( a : Bool ) : Bool;
import operator==( const a : IScriptable, const b : IScriptable ) : Bool;
import operator!=( const a : IScriptable, const b : IScriptable ) : Bool;
