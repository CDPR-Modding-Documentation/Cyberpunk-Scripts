class DismembermentTriggeredPrereqState extends PrereqState
{
	var m_owner : weak< GameObject >;
	var m_listenerInt : CallbackHandle;

	protected event OnStateUpdate( value : Uint32 )
	{
		var checkPassed : Bool;
		const var prereq : DismembermentTriggeredPrereq;
		prereq = ( ( DismembermentTriggeredPrereq )( GetPrereq() ) );
		checkPassed = prereq.Evaluate( m_owner, value );
		if( checkPassed )
		{
			OnChangedRepeated( false );
		}
	}

}

class DismembermentTriggeredPrereq extends IScriptablePrereq
{
	var m_currValue : Uint32;
	default m_currValue = 0;

	public const function Evaluate( owner : GameObject, value : Uint32 ) : Bool
	{
		var checkPassed : Bool;
		checkPassed = value != m_currValue;
		return checkPassed;
	}

	protected const override function OnRegister( state : PrereqState, game : GameInstance, context : IScriptable ) : Bool
	{
		var bb : IBlackboard;
		var castedState : DismembermentTriggeredPrereqState;
		var player : weak< PlayerPuppet >;
		castedState = ( ( DismembermentTriggeredPrereqState )( state ) );
		castedState.m_owner = ( ( GameObject )( context ) );
		player = ( ( PlayerPuppet )( context ) );
		if( player )
		{
			bb = GameInstance.GetBlackboardSystem( player.GetGame() ).Get( GetAllBlackboardDefs().PlayerPerkData );
			castedState.m_listenerInt = bb.RegisterListenerUint( GetAllBlackboardDefs().PlayerPerkData.DismembermentInstigated, castedState, 'OnStateUpdate' );
		}
		return false;
	}

	protected const override function OnUnregister( state : PrereqState, game : GameInstance, context : IScriptable )
	{
		var bb : IBlackboard;
		var castedState : DismembermentTriggeredPrereqState;
		var player : weak< PlayerPuppet >;
		player = ( ( PlayerPuppet )( context ) );
		if( player )
		{
			bb = GameInstance.GetBlackboardSystem( player.GetGame() ).Get( GetAllBlackboardDefs().PlayerPerkData );
			castedState = ( ( DismembermentTriggeredPrereqState )( state ) );
			bb.UnregisterListenerUint( GetAllBlackboardDefs().PlayerPerkData.DismembermentInstigated, castedState.m_listenerInt );
		}
	}

}

