class IsInFocusModePSMPrereqState extends PlayerStateMachinePrereqState
{
}

class IsInFocusModePSMPrereq extends PlayerStateMachinePrereq
{

	protected const override function OnRegister( state : PrereqState, game : GameInstance, context : IScriptable ) : Bool
	{
		var bb : IBlackboard;
		var castedState : IsInFocusModePSMPrereqState;
		bb = GameInstance.GetBlackboardSystem( game ).GetLocalInstanced( ( ( ScriptedPuppet )( context ) ).GetEntityID(), GetAllBlackboardDefs().PlayerStateMachine );
		castedState = ( ( IsInFocusModePSMPrereqState )( state ) );
		castedState.m_owner = ( ( GameObject )( context ) );
		castedState.m_prevValue = bb.GetInt( GetAllBlackboardDefs().PlayerStateMachine.Vision );
		castedState.m_listenerInt = bb.RegisterListenerInt( GetAllBlackboardDefs().PlayerStateMachine.Vision, castedState, 'OnStateUpdate' );
		return false;
	}

	protected const override function OnUnregister( state : PrereqState, game : GameInstance, context : IScriptable )
	{
		var bb : IBlackboard;
		var castedState : IsInFocusModePSMPrereqState;
		bb = GameInstance.GetBlackboardSystem( game ).GetLocalInstanced( ( ( ScriptedPuppet )( context ) ).GetEntityID(), GetAllBlackboardDefs().PlayerStateMachine );
		castedState = ( ( IsInFocusModePSMPrereqState )( state ) );
		bb.UnregisterListenerInt( GetAllBlackboardDefs().PlayerStateMachine.Vision, castedState.m_listenerInt );
	}

	protected const override function GetStateMachineEnum() : String
	{
		return "gamePSMVision";
	}

	protected const override function GetCurrentPSMStateIndex( bb : IBlackboard ) : Int32
	{
		return bb.GetInt( GetAllBlackboardDefs().PlayerStateMachine.Vision );
	}

}

