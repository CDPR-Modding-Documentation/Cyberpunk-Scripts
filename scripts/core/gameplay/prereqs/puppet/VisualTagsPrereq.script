class VisualTagsPrereq extends IScriptablePrereq
{
	var m_allowedTags : array< CName >;
	var m_invert : Bool;

	protected export override function Initialize( recordID : TweakDBID )
	{
		var prereqRecord : VisualTagsPrereq_Record;
		prereqRecord = TweakDBInterface.GetVisualTagsPrereqRecord( recordID );
		m_allowedTags = prereqRecord.AllowedTags();
		m_invert = prereqRecord.Invert();
	}

	protected const override function OnApplied( state : PrereqState, game : GameInstance, context : IScriptable )
	{
		state.OnChanged( IsFulfilled( game, context ) );
	}

	public export const override function IsFulfilled( game : GameInstance, context : IScriptable ) : Bool
	{
		var owner : ScriptedPuppet;
		owner = ( ( ScriptedPuppet )( context ) );
		if( !( owner ) )
		{
			return ( ( m_invert ) ? ( true ) : ( false ) );
		}
		if( !( NPCManager.HasAllVisualTags( owner, m_allowedTags ) ) )
		{
			return ( ( m_invert ) ? ( true ) : ( false ) );
		}
		return ( ( m_invert ) ? ( false ) : ( true ) );
	}

}

