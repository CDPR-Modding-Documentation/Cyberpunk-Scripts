class UsedHealingItemOrCyberwarePrereqState extends PrereqState
{
	var m_listenerInfo : CallbackHandle;

	protected event OnStateUpdate( value : Uint32 )
	{
		var checkPassed : Bool;
		const var prereq : UsedHealingItemOrCyberwarePrereq;
		prereq = ( ( UsedHealingItemOrCyberwarePrereq )( GetPrereq() ) );
		checkPassed = prereq.Evaluate( value );
		if( checkPassed )
		{
			OnChangedRepeated( false );
		}
	}

}

class UsedHealingItemOrCyberwarePrereq extends IScriptablePrereq
{
	var m_curValue : Uint32;
	default m_curValue = 0;

	public const function Evaluate( value : Uint32 ) : Bool
	{
		return value != m_curValue;
	}

	protected const override function OnRegister( state : PrereqState, game : GameInstance, context : IScriptable ) : Bool
	{
		var bb : IBlackboard;
		var castedState : UsedHealingItemOrCyberwarePrereqState;
		var player : weak< PlayerPuppet >;
		player = ( ( PlayerPuppet )( context ) );
		if( player )
		{
			bb = GameInstance.GetBlackboardSystem( player.GetGame() ).Get( GetAllBlackboardDefs().PlayerPerkData );
			castedState = ( ( UsedHealingItemOrCyberwarePrereqState )( state ) );
			castedState.m_listenerInfo = bb.RegisterListenerUint( GetAllBlackboardDefs().PlayerPerkData.UsedHealingItemOrCyberware, castedState, 'OnStateUpdate' );
		}
		return false;
	}

	protected const override function OnUnregister( state : PrereqState, game : GameInstance, context : IScriptable )
	{
		var bb : IBlackboard;
		var castedState : UsedHealingItemOrCyberwarePrereqState;
		var player : weak< PlayerPuppet >;
		player = ( ( PlayerPuppet )( context ) );
		if( player )
		{
			bb = GameInstance.GetBlackboardSystem( player.GetGame() ).Get( GetAllBlackboardDefs().PlayerPerkData );
			castedState = ( ( UsedHealingItemOrCyberwarePrereqState )( state ) );
			bb.UnregisterListenerUint( GetAllBlackboardDefs().PlayerPerkData.UsedHealingItemOrCyberware, castedState.m_listenerInfo );
		}
	}

}

