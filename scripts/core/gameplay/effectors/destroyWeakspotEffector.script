class DestroyWeakspotEffector extends Effector
{
	var m_weakspotIndex : Int32;

	protected override function Initialize( record : TweakDBID, game : GameInstance, parentRecord : TweakDBID )
	{
		m_weakspotIndex = TweakDBInterface.GetInt( record + T".weakSpotIndex", 0 );
	}

	protected override function ActionOn( owner : GameObject )
	{
		var i : Int32;
		var weakspotComponent : WeakspotComponent;
		var npc : NPCPuppet;
		var weakspots : array< weak< WeakspotObject > >;
		var weakspot : WeakspotObject;
		npc = ( ( NPCPuppet )( owner ) );
		if( !( npc ) )
		{
			return;
		}
		weakspotComponent = npc.GetWeakspotComponent();
		if( !( weakspotComponent ) )
		{
			return;
		}
		weakspotComponent.GetWeakspots( weakspots );
		if( weakspots.Size() <= 0 )
		{
			return;
		}
		if( m_weakspotIndex < 0 )
		{
			for( i = 0; i < weakspots.Size(); i += 1 )
			{
				if( !( weakspots[ i ].IsDead() ) )
				{
					weakspot = weakspots[ i ];
					break;
				}
			}
		}
		else if( m_weakspotIndex >= weakspots.Size() )
		{
			return;
		}
		else
		{
			weakspot = weakspots[ m_weakspotIndex ];
		}
		if( GameInstance.GetGodModeSystem( npc.GetGame() ).HasGodMode( npc.GetEntityID(), gameGodModeType.Invulnerable ) )
		{
			return;
		}
		ScriptedWeakspotObject.Kill( weakspot, GameInstance.GetPlayerSystem( npc.GetGame() ).GetLocalPlayerMainGameObject() );
	}

}

