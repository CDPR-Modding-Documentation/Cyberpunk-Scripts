class TriggerAttackByChanceEffector extends Effector
{
	var m_owner : weak< GameObject >;
	var m_attackTDBID : TweakDBID;
	var m_chance : Float;

	protected override function Initialize( record : TweakDBID, game : GameInstance, parentRecord : TweakDBID )
	{
		var effectorRecord : TriggerAttackEffector_Record;
		effectorRecord = TweakDBInterface.GetTriggerAttackEffectorRecord( record );
		m_attackTDBID = effectorRecord.AttackRecord().GetID();
		m_chance = TweakDBInterface.GetFloat( record + T".chance", 0.0 );
	}

	protected override function RepeatedAction( owner : GameObject )
	{
		ActionOn( owner );
	}

	protected override function ActionOn( owner : GameObject )
	{
		var rand : Float;
		var i : Int32;
		var attack : Attack_GameEffect;
		var tempArr : array< String >;
		var flag : SHitFlag;
		var hitFlags : array< SHitFlag >;
		rand = RandF();
		if( m_chance >= rand )
		{
			tempArr = TweakDBInterface.GetAttackRecord( m_attackTDBID ).HitFlags();
			for( i = 0; i < tempArr.Size(); i += 1 )
			{
				flag.flag = ( ( hitFlag )( ( ( Int32 )( EnumValueFromString( "hitFlag", tempArr[ i ] ) ) ) ) );
				flag.source = 'Attack';
				hitFlags.PushBack( flag );
			}
			attack = RPGManager.PrepareGameEffectAttack( owner.GetGame(), owner, owner, m_attackTDBID, , hitFlags, owner );
			attack.StartAttack();
			Uninitialize( owner.GetGame() );
		}
	}

}

