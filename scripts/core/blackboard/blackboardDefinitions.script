import function GetAllBlackboardDefs() : AllBlackboardDefinitions;

importonly struct BlackboardID
{
}

importonly struct BlackboardID_Bool extends BlackboardID
{
}

importonly struct BlackboardID_Int extends BlackboardID
{
}

importonly struct BlackboardID_Uint extends BlackboardID
{
}

importonly struct BlackboardID_Float extends BlackboardID
{
}

importonly struct BlackboardID_Name extends BlackboardID
{
}

importonly struct BlackboardID_Vector2 extends BlackboardID
{
}

importonly struct BlackboardID_Vector4 extends BlackboardID
{
}

importonly struct BlackboardID_Quat extends BlackboardID
{
}

importonly struct BlackboardID_Entity extends BlackboardID
{
}

importonly struct BlackboardID_String extends BlackboardID
{
}

importonly struct BlackboardID_EulerAngles extends BlackboardID
{
}

importonly struct BlackboardID_EntityID extends BlackboardID
{
}

importonly struct BlackboardID_Variant extends BlackboardID
{
}

import implicit cast ( id : BlackboardID_Bool ) : BlackboardID;
import implicit cast ( id : BlackboardID_Int ) : BlackboardID;
import implicit cast ( id : BlackboardID_Uint ) : BlackboardID;
import implicit cast ( id : BlackboardID_Float ) : BlackboardID;
import implicit cast ( id : BlackboardID_Name ) : BlackboardID;
import implicit cast ( id : BlackboardID_Vector2 ) : BlackboardID;
import implicit cast ( id : BlackboardID_Vector4 ) : BlackboardID;
import implicit cast ( id : BlackboardID_Quat ) : BlackboardID;
import implicit cast ( id : BlackboardID_Entity ) : BlackboardID;
import implicit cast ( id : BlackboardID_String ) : BlackboardID;
import implicit cast ( id : BlackboardID_EulerAngles ) : BlackboardID;
import implicit cast ( id : BlackboardID_EntityID ) : BlackboardID;
import implicit cast ( id : BlackboardID_Variant ) : BlackboardID;

importonly class BlackboardDefinition extends IScriptable
{
}

class PlayerStateMachineDef extends BlackboardDefinition
{
	var Locomotion : BlackboardID_Int;
	var LocomotionDetailed : BlackboardID_Int;
	var HighLevel : BlackboardID_Int;
	var UpperBody : BlackboardID_Int;
	var TimeDilation : BlackboardID_Int;
	var Weapon : BlackboardID_Int;
	var LatestWeaponReloadTime : BlackboardID_Float;
	var Melee : BlackboardID_Int;
	var UI : BlackboardID_Int;
	var Crosshair : BlackboardID_Int;
	var Reaction : BlackboardID_Int;
	var Zones : BlackboardID_Int;
	var SecurityZoneData : BlackboardID_Variant;
	var Vision : BlackboardID_Int;
	var VisionDebug : BlackboardID_Int;
	var SceneTier : BlackboardID_Int;
	var CombatGadget : BlackboardID_Int;
	var LastCombatGadgetUsed : BlackboardID_Variant;
	var Consumable : BlackboardID_Int;
	var Vehicle : BlackboardID_Int;
	var MountedToVehicleInDriverSeat : BlackboardID_Bool;
	var MountedToCombatVehicle : BlackboardID_Bool;
	var MountedToVehicle : BlackboardID_Bool;
	var InArmoredVehicle : BlackboardID_Bool;
	var ZoomLevel : BlackboardID_Float;
	var MaxZoomLevel : BlackboardID_Int;
	var ToggleFireMode : BlackboardID_Bool;
	var SwitchWeapon : BlackboardID_Bool;
	var IsDoorInteractionActive : BlackboardID_Bool;
	var FinisherTarget : BlackboardID_EntityID;
	var IsInteractingWithDevice : BlackboardID_Bool;
	var IsInteractingViaPersonalLink : BlackboardID_Bool;
	var IsForceOpeningDoor : BlackboardID_Bool;
	var IsControllingDevice : BlackboardID_Bool;
	var IsControllingCamera : BlackboardID_Bool;
	var IsUIZoomDevice : BlackboardID_Bool;
	var UIZoomDeviceID : BlackboardID_EntityID;
	var UseUnarmed : BlackboardID_Bool;
	var Berserk : BlackboardID_Int;
	var ActiveCyberware : BlackboardID_Int;
	var Whip : BlackboardID_Int;
	var DEBUG_SilencedWeapon : BlackboardID_Bool;
	var LeftHandCyberware : BlackboardID_Int;
	var UseLeftHand : BlackboardID_Bool;
	var MeleeWeapon : BlackboardID_Int;
	var Carrying : BlackboardID_Bool;
	var CarryingDisposal : BlackboardID_Bool;
	var CurrentElevator : BlackboardID_Variant;
	var IsPlayerInsideElevator : BlackboardID_Bool;
	var IsPlayerInsideMovingElevator : BlackboardID_Bool;
	var Combat : BlackboardID_Int;
	var Stamina : BlackboardID_Int;
	var Vitals : BlackboardID_Int;
	var Takedown : BlackboardID_Int;
	var TakedownTargetID : BlackboardID_EntityID;
	var Fall : BlackboardID_Int;
	var Landing : BlackboardID_Int;
	var UsingCover : BlackboardID_Bool;
	var IsInMinigame : BlackboardID_Bool;
	var UploadingQuickHackIDs : BlackboardID_Variant;
	var CostFreeActionID : BlackboardID_Variant;
	var AmountOfCostFreeActions : BlackboardID_Int;
	var MeleeSpreadableQuickhackActionID : BlackboardID_Variant;
	var EntityIDTargetingPlayer : BlackboardID_EntityID;
	var EntityIDVehicleRemoteControlled : BlackboardID_EntityID;
	var IsVehicleRemoteControlCameraTPP : BlackboardID_Bool;
	var Swimming : BlackboardID_Int;
	var BodyCarrying : BlackboardID_Int;
	var BodyDisposalDetailed : BlackboardID_Int;
	var DisplayDeathMenu : BlackboardID_Bool;
	var OverrideQuickHackPanelDilation : BlackboardID_Bool;
	var NanoWireLaunchMode : BlackboardID_Int;
	var IsMovingHorizontally : BlackboardID_Bool;
	var IsMovingVertically : BlackboardID_Bool;
	var IsOnGround : BlackboardID_Bool;
	var MinElevation : BlackboardID_Float;
	var MaxElevation : BlackboardID_Float;
	var ActionRestriction : BlackboardID_Variant;
	var MeleeLeap : BlackboardID_Bool;
	var IsInWorkspot : BlackboardID_Int;
	var QuestForceShoot : BlackboardID_Bool;
	var LadderCameraParams : BlackboardID_Int;
	var DodgeTimeStamp : BlackboardID_Float;
	var CanOnePunch : BlackboardID_Bool;
	var HasSmartGunLockedOnTarget : BlackboardID_Bool;
	var SceneAimForced : BlackboardID_Bool;
	var SceneSafeForced : BlackboardID_Bool;
	var SceneWeaponLoweringSpeedOverride : BlackboardID_Float;
	var ScenePreventFirstEquip : BlackboardID_Bool;
	var MountedPreventFirstEquip : BlackboardID_Bool;
	var IgnoreBarbedWireStateEnterTime : BlackboardID_Float;
	var IsInLoreAnimationScene : BlackboardID_Bool;
	var Felled : BlackboardID_Bool;
	var IsVehicleInTPP : BlackboardID_Bool;
	var IsDriverCombatInTPP : BlackboardID_Bool;
	var DriverCombatWeaponType : BlackboardID_Int;
	var TrackedTarget : BlackboardID_Variant;
	var TPPAimPosition : BlackboardID_Vector4;
	var BodySlamBump : BlackboardID_Int;
	var IsInBodySlamState : BlackboardID_Bool;
	var AimInTimeRemaining : BlackboardID_Float;
	var AimInTime : BlackboardID_Float;
	var CanThrowCarriedNPC : BlackboardID_Bool;
	var IsWeaponFirstEquip : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return false;
	}

}

class PlayerPerkDataDef extends BlackboardDefinition
{
	var WoundedInstigated : BlackboardID_Uint;
	var DismembermentInstigated : BlackboardID_Variant;
	var EntityNoticedPlayer : BlackboardID_Uint;
	var CombatStateTime : BlackboardID_Float;
	var LeapedDistance : BlackboardID_Float;
	var LeapPosition : BlackboardID_Vector4;
	var LeapTarget : BlackboardID_EntityID;
	var UsedHealingItemOrCyberware : BlackboardID_Uint;
	var StartedUsingHealingItemOrCyberware : BlackboardID_Uint;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class PlayerQuickHackDataDef extends BlackboardDefinition
{
	var CachedQuickHackList : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class PuppetDef extends BlackboardDefinition
{
	var IsCrowd : BlackboardID_Bool;
	var HideNameplate : BlackboardID_Bool;
	var ForceFriendlyCarry : BlackboardID_Bool;
	var ForcedCarryStyle : BlackboardID_Int;
	var HasCPOMissionData : BlackboardID_Bool;
	var IsPlayerInterestingFromSecuritySystemPOV : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return false;
	}

}

struct SpreadMapItem
{
	var key : weak< InteractionBase_Record >;
	var count : Int32;
	var range : Float;
}

class HackingDataDef extends BlackboardDefinition
{

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}


	var SpreadMap : BlackboardID_Variant;

	public static function AddItemToSpreadMap( player : weak< PlayerPuppet >, key : weak< InteractionBase_Record >, count : Int32, range : Float ) : Bool
	{
		var hackingData : IBlackboard;
		var spreadMap : array< SpreadMapItem >;
		var spreadItem : SpreadMapItem;
		var i : Int32;
		if( !( player ) || !( key ) )
		{
			return false;
		}
		hackingData = player.GetHackingDataBlackboard();
		if( !( hackingData ) )
		{
			return false;
		}
		spreadMap = ( ( array< SpreadMapItem > )( hackingData.GetVariant( GetAllBlackboardDefs().HackingData.SpreadMap ) ) );
		for( i = 0; i < spreadMap.Size(); i += 1 )
		{
			if( spreadMap[ i ].key == key )
			{
				spreadMap[ i ].count = count;
				spreadMap[ i ].range = range;
				hackingData.SetVariant( GetAllBlackboardDefs().HackingData.SpreadMap, spreadMap );
				return true;
			}
		}
		spreadItem.key = key;
		spreadItem.count = count;
		spreadItem.range = range;
		spreadMap.PushBack( spreadItem );
		hackingData.SetVariant( GetAllBlackboardDefs().HackingData.SpreadMap, spreadMap );
		return true;
	}

	public static function GetValuesFromSpreadMap( player : weak< PlayerPuppet >, key : weak< InteractionBase_Record >, out count : Int32, out range : Float ) : Bool
	{
		var hackingData : IBlackboard;
		var spreadMap : array< SpreadMapItem >;
		var i : Int32;
		if( !( player ) || !( key ) )
		{
			return false;
		}
		hackingData = player.GetHackingDataBlackboard();
		if( !( hackingData ) )
		{
			return false;
		}
		spreadMap = ( ( array< SpreadMapItem > )( hackingData.GetVariant( GetAllBlackboardDefs().HackingData.SpreadMap ) ) );
		for( i = 0; i < spreadMap.Size(); i += 1 )
		{
			if( spreadMap[ i ].key == key )
			{
				count = spreadMap[ i ].count;
				range = spreadMap[ i ].range;
				return true;
			}
		}
		return false;
	}

	public static function DecrementCountFromSpreadMap( player : weak< PlayerPuppet >, key : weak< InteractionBase_Record > ) : Bool
	{
		var hackingData : IBlackboard;
		var spreadMap : array< SpreadMapItem >;
		var i : Int32;
		if( !( player ) || !( key ) )
		{
			return false;
		}
		hackingData = player.GetHackingDataBlackboard();
		if( !( hackingData ) )
		{
			return false;
		}
		spreadMap = ( ( array< SpreadMapItem > )( hackingData.GetVariant( GetAllBlackboardDefs().HackingData.SpreadMap ) ) );
		for( i = 0; i < spreadMap.Size(); i += 1 )
		{
			if( spreadMap[ i ].key == key )
			{
				spreadMap[ i ].count = spreadMap[ i ].count - 1;
				hackingData.SetVariant( GetAllBlackboardDefs().HackingData.SpreadMap, spreadMap );
				if( spreadMap[ i ].count <= 0 )
				{
					return false;
				}
				return true;
			}
		}
		return false;
	}

}

class HackingMinigameDef extends BlackboardDefinition
{
	var DeviceID : BlackboardID_EntityID;
	var MinigameDefaults : BlackboardID_Variant;
	var NextMinigameData : BlackboardID_Variant;
	var SkipSummaryScreen : BlackboardID_Bool;
	var PlayerPrograms : BlackboardID_Variant;
	var ActivePrograms : BlackboardID_Variant;
	var ActiveTraps : BlackboardID_Variant;
	var State : BlackboardID_Int;
	var TimerLeftPercent : BlackboardID_Float;
	var Entity : BlackboardID_Variant;
	var IsJournalTarget : BlackboardID_Bool;
	var LastPlayerHackPosition : BlackboardID_Vector4;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_PlayerStatsDef extends BlackboardDefinition
{
	var MaxHealth : BlackboardID_Int;
	var CurrentHealth : BlackboardID_Int;
	var PhysicalResistance : BlackboardID_Int;
	var ThermalResistance : BlackboardID_Int;
	var EnergyResistance : BlackboardID_Int;
	var ChemicalResistance : BlackboardID_Int;
	var Level : BlackboardID_Int;
	var CurrentXP : BlackboardID_Int;
	var RequiredXP : BlackboardID_Int;
	var StreetCredLevel : BlackboardID_Int;
	var StreetCredPoints : BlackboardID_Int;
	var Attributes : BlackboardID_Variant;
	var DevelopmentPoints : BlackboardID_Variant;
	var Proficiency : BlackboardID_Variant;
	var Perks : BlackboardID_Variant;
	var ModifiedPerkArea : BlackboardID_Variant;
	var weightMax : BlackboardID_Int;
	var currentInventoryWeight : BlackboardID_Float;
	var isReplacer : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class PuppetStateDef extends BlackboardDefinition
{
	var HighLevel : BlackboardID_Int;
	var UpperBody : BlackboardID_Int;
	var BehaviorState : BlackboardID_Int;
	var PhaseState : BlackboardID_Int;
	var Stance : BlackboardID_Int;
	var HitReactionMode : BlackboardID_Int;
	var DefenseMode : BlackboardID_Int;
	var LocomotionMode : BlackboardID_Int;
	var WeakSpots : BlackboardID_Int;
	var ReactionBehavior : BlackboardID_Int;
	var ForceRagdollOnDeath : BlackboardID_Bool;
	var InExclusiveAction : BlackboardID_Bool;
	var SlotAnimationInProgress : BlackboardID_Bool;
	var WorkspotAnimationInProgress : BlackboardID_Bool;
	var InAirAnimation : BlackboardID_Bool;
	var InPendingBehavior : BlackboardID_Bool;
	var HasCalledReinforcements : BlackboardID_Bool;
	var IsBodyDisposed : BlackboardID_Bool;
	var DetectionPercentage : BlackboardID_Float;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return false;
	}

}

class ChargedGrenadesBlackBoardDef extends BlackboardDefinition
{
	var curentGrenadeCharges : BlackboardID_Int;
	var maxGrenadeCharges : BlackboardID_Int;
	var rechargeGoingOn : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class ChargedHealingBlackBoardDef extends BlackboardDefinition
{
	var currHealingItemCharge : BlackboardID_Int;
	var rechargeGoingOn : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class BlackwallAnimDef extends BlackboardDefinition
{
	var deathAnimNumber : BlackboardID_Int;
	var handGestureAnimNumber : BlackboardID_Int;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class PuppetReactionDef extends BlackboardDefinition
{
	var exitReactionFlag : BlackboardID_Bool;
	var blockReactionFlag : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return false;
	}

}

class AISquadBlackBoardDef extends BlackboardDefinition
{
	var BarkPlayed : BlackboardID_Bool;
	var LowHealthBarkPlayed : BlackboardID_Bool;
	var BarkPlayedTimeStamp : BlackboardID_Float;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class FollowNPCDef extends BlackboardDefinition
{
	var Position : BlackboardID_Vector4;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return false;
	}

}

class DeviceDebugDef extends BlackboardDefinition
{
	var CurrentlyDebuggedDevice : BlackboardID_Name;
	var DebuggedEntityIDAsString : BlackboardID_String;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class EffectSharedDataDef extends BlackboardDefinition
{
	var attackStatModList : BlackboardID_Variant;
	var box : BlackboardID_Vector4;
	var charge : BlackboardID_Float;
	var duration : BlackboardID_Float;
	var hitCooldown : BlackboardID_Float;
	var effectName : BlackboardID_String;
	var entity : BlackboardID_Entity;
	var forward : BlackboardID_Vector4;
	var fxPackage : BlackboardID_Variant;
	var attackData : BlackboardID_Variant;
	var infiniteDuration : BlackboardID_Bool;
	var playerOwnedWeapon : BlackboardID_Bool;
	var position : BlackboardID_Vector4;
	var muzzlePosition : BlackboardID_Vector4;
	var projectileHitEvent : BlackboardID_Variant;
	var radius : BlackboardID_Float;
	var range : BlackboardID_Float;
	var height : BlackboardID_Float;
	var initRange : BlackboardID_Float;
	var width : BlackboardID_Float;
	var axisConstraints : BlackboardID_Vector4;
	var renderMaterialOverride : BlackboardID_Bool;
	var clearMaterialOverlayOnDetach : BlackboardID_Bool;
	var rotation : BlackboardID_Quat;
	var minRayAngleDiff : BlackboardID_Float;
	var statType : BlackboardID_Int;
	var stimuliEvent : BlackboardID_Variant;
	var stimuliRaycastTest : BlackboardID_Bool;
	var stimType : BlackboardID_Int;
	var value : BlackboardID_Float;
	var flags : BlackboardID_Variant;
	var attack : BlackboardID_Variant;
	var attackId : BlackboardID_Variant;
	var attackNumber : BlackboardID_Int;
	var impactOrientationSlot : BlackboardID_Name;
	var vfxOffset : BlackboardID_Vector4;
	var disableVfx : BlackboardID_Bool;
	var enableImpulseFalloff : BlackboardID_Bool;
	var impulseFalloffFactor : BlackboardID_Float;
	var statusEffect : BlackboardID_Variant;
	var angle : BlackboardID_Float;
	var fallback_weaponPierce : BlackboardID_Bool;
	var fallback_weaponPierceChargeLevel : BlackboardID_Float;
	var raycastEnd : BlackboardID_Vector4;
	var maxPathLength : BlackboardID_Float;
	var effectorRecordName : BlackboardID_String;
	var targets : BlackboardID_Variant;
	var highlightType : BlackboardID_Int;
	var outlineType : BlackboardID_Int;
	var highlightPriority : BlackboardID_Int;
	var fxResource : BlackboardID_Variant;
	var dotCycleDuration : BlackboardID_Float;
	var dotLastApplicationTime : BlackboardID_Float;
	var enable : BlackboardID_Bool;
	var slotName : BlackboardID_Name;
	var targetComponent : BlackboardID_Variant;
	var meleeCleave : BlackboardID_Bool;
	var inTPP : BlackboardID_Bool;
	var tppScale : BlackboardID_Float;
	var highlightedTargets : BlackboardID_Variant;
	var forceVisionAppearanceData : BlackboardID_Variant;
	var tickRateOverride : BlackboardID_Float;
	var randRoll : BlackboardID_Float;
	var ignoreMountedVehicleCollision : BlackboardID_Bool;
	var debugBool : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return false;
	}

}

class UI_SystemDef extends BlackboardDefinition
{
	var IsInMenu : BlackboardID_Bool;
	var CircularBlurEnabled : BlackboardID_Bool;
	var CircularBlurBlendTime : BlackboardID_Float;
	var TrackedMappin : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class LocalPlayerDef extends BlackboardDefinition
{
	var InsideVehicleForbiddenAreasCount : BlackboardID_Int;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UIGameDataDef extends BlackboardDefinition
{
	var BreachUIParams : BlackboardID_Variant;
	var InteractionData : BlackboardID_Variant;
	var ShowDialogLine : BlackboardID_Variant;
	var HideDialogLine : BlackboardID_Variant;
	var HideDialogLineByData : BlackboardID_Variant;
	var ShowSceneComment : BlackboardID_String;
	var HideSceneComment : BlackboardID_Bool;
	var ShowSubtitlesBackground : BlackboardID_Bool;
	var Popup_IsModal : BlackboardID_Bool;
	var Popup_IsShown : BlackboardID_Bool;
	var Popup_Data : BlackboardID_Variant;
	var Popup_Settings : BlackboardID_Variant;
	var Controller_Disconnected : BlackboardID_Bool;
	var ActivityLog : BlackboardID_Variant;
	var RightWeaponRecordID : BlackboardID_Variant;
	var LeftWeaponRecordID : BlackboardID_Variant;
	var UIVendorContextRequest : BlackboardID_Bool;
	var UIjailbreakData : BlackboardID_Variant;
	var QuestTimerInitialDuration : BlackboardID_Float;
	var QuestTimerCurrentDuration : BlackboardID_Float;
	var Tutorial_EnableHighlight : BlackboardID_Bool;
	var Tutorial_EntityRefToHighlight : BlackboardID_Variant;
	var WeaponSway : BlackboardID_Vector2;
	var ApplyWeaponSwayToCamera : BlackboardID_Bool;
	var NormalizedWeaponSway : BlackboardID_Vector2;
	var DriverCombatCrosshairReticle : BlackboardID_Variant;
	var NotificationJournalHash : BlackboardID_Int;
	var IsBriefingActive : BlackboardID_Bool;
	var MuppetStats : BlackboardID_Variant;
	var ActiveNotificationsQueue : BlackboardID_Int;
	var BerserkActive : BlackboardID_Bool;
	var Popup_VehiclesManager_IsShown : BlackboardID_Bool;
	var Popup_Radio_IsShown : BlackboardID_Bool;
	var Popup_Radio_Enabled : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UIInteractionsDef extends BlackboardDefinition
{
	var InteractionChoiceHub : BlackboardID_Variant;
	var DialogChoiceHubs : BlackboardID_Variant;
	var LootData : BlackboardID_Variant;
	var ContactsData : BlackboardID_Variant;
	var ActiveChoiceHubID : BlackboardID_Int;
	var SelectedIndex : BlackboardID_Int;
	var ActiveInteractions : BlackboardID_Variant;
	var InteractionSkillCheckHub : BlackboardID_Variant;
	var NameplateOwnerID : BlackboardID_EntityID;
	var VisualizersInfo : BlackboardID_Variant;
	var ShouldHideClampedMappins : BlackboardID_Bool;
	var LastAttemptedChoice : BlackboardID_Variant;
	var LookAtTargetVisualizerID : BlackboardID_Int;
	var HasScrollableInteraction : BlackboardID_Bool;
	var IsQuestNotificationUp : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class DebugDataDef extends BlackboardDefinition
{
	var WeaponSpread_EvenDistributionRowCount : BlackboardID_Int;
	var WeaponSpread_ProjectilesPerShot : BlackboardID_Int;
	var WeaponSpread_UseCircularSpread : BlackboardID_Bool;
	var WeaponSpread_UseEvenDistribution : BlackboardID_Bool;
	var Vehicle_BlockSwitchSeats : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_ActiveVehicleDataDef extends BlackboardDefinition
{
	var VehPlayerStateData : BlackboardID_Variant;
	var IsPlayerMounted : BlackboardID_Bool;
	var IsTPPCameraOn : BlackboardID_Bool;
	var PositionInRace : BlackboardID_Int;
	var IsFPPRearviewCameraActivated : BlackboardID_Bool;
	var RemoteControlledVehicleData : BlackboardID_Variant;
	var MountedWeaponsTargets : BlackboardID_Variant;
	var MountedMissileLauncherAmmo : BlackboardID_Uint;
	var MountedPowerWeaponAmmo : BlackboardID_Uint;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UIWorldBoundariesDef extends BlackboardDefinition
{
	var IsPlayerCloseToBoundary : BlackboardID_Bool;
	var IsPlayerGoingDeeper : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class VehicleDef extends BlackboardDefinition
{
	var BikeTilt : BlackboardID_Float;
	var SpeedValue : BlackboardID_Float;
	var GearValue : BlackboardID_Int;
	var RPMValue : BlackboardID_Float;
	var RPMMax : BlackboardID_Float;
	var SuspensionTransversalForce : BlackboardID_Float;
	var SuspensionLongitudinalForce : BlackboardID_Float;
	var IsAutopilotOn : BlackboardID_Bool;
	var DeclutchTimer : BlackboardID_Float;
	var HandlingPenalty : BlackboardID_Float;
	var HeadLightMode : BlackboardID_Int;
	var VehicleState : BlackboardID_Int;
	var VehicleReady : BlackboardID_Bool;
	var VehRadioState : BlackboardID_Bool;
	var VehRadioStationName : BlackboardID_Name;
	var IsCrowd : BlackboardID_Bool;
	var IsUIActive : BlackboardID_Bool;
	var GameTime : BlackboardID_String;
	var Collision : BlackboardID_Bool;
	var DamageState : BlackboardID_Int;
	var MeanSlipRatio : BlackboardID_Float;
	var IsHandbraking : BlackboardID_Int;
	var EngineTemp : BlackboardID_Float;
	var IsInWater : BlackboardID_Bool;
	var RaceTimer : BlackboardID_String;
	var IsTargetingFriendly : BlackboardID_Bool;
	var ChaseIsChaseDontAvoidPedestrians : BlackboardID_Bool;
	var ChaseMaxRammingTickets : BlackboardID_Uint;
	var ChaseTimeDelayToLeaveVehicle : BlackboardID_Float;
	var MinimapMappinDeleteAnim : BlackboardID_Name;
	var UseCarAlarmStim : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return false;
	}

}

class VehicleSummonDataDef extends BlackboardDefinition
{
	var GarageState : BlackboardID_Uint;
	var UnlockedVehiclesCount : BlackboardID_Uint;
	var SummonState : BlackboardID_Uint;
	var SummonedVehicleEntityID : BlackboardID_EntityID;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class VehiclePurchaseDataDef extends BlackboardDefinition
{
	var PurchasedVehicleRecordID : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class AIFollowSlotDef extends BlackboardDefinition
{
	var slotID : BlackboardID_Int;
	var slotTransform : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return false;
	}

}

class WeaponDataDef extends BlackboardDefinition
{
	var Charge : BlackboardID_Float;
	var OverheatPercentage : BlackboardID_Float;
	var IsInForcedOverheatCooldown : BlackboardID_Bool;
	var ChargeStep : BlackboardID_Variant;
	var TriggerMode : BlackboardID_Variant;
	var MagazineAmmoCapacity : BlackboardID_Uint;
	var MagazineAmmoCount : BlackboardID_Uint;
	var MagazineAmmoID : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return false;
	}

}

class CombatGadgetDataDef extends BlackboardDefinition
{
	var throwUnequip : BlackboardID_Bool;
	var lastThrowAngle : BlackboardID_Float;
	var lastThrowPosition : BlackboardID_Vector4;
	var lastThrowStartType : BlackboardID_Variant;
}

class LeftHandCyberwareDataDef extends BlackboardDefinition
{
	var ProjectileCaught : BlackboardID_Bool;
}

class MinesDataDef extends BlackboardDefinition
{
	var CurrentNormal : BlackboardID_Vector4;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class CoverActionDataDef extends BlackboardDefinition
{
	var coverActionStateId : BlackboardID_Int;
	var playerNearValidEdge : BlackboardID_Bool;
	var debugLeaning : BlackboardID_Bool;
	var debugAutoLeaning : BlackboardID_Bool;
	var debugDpadLeaning : BlackboardID_Bool;
	var debugLsLeaning : BlackboardID_Bool;
	var debugStagesLeaning : BlackboardID_Bool;
	var debugAdsLeaning : BlackboardID_Bool;
}

class BraindanceBlackboardDef extends BlackboardDefinition
{
	var activeBraindanceVisionMode : BlackboardID_Int;
	var lastBraindanceVisionMode : BlackboardID_Int;
	var Progress : BlackboardID_Float;
	var SectionTime : BlackboardID_Float;
	var Clue : BlackboardID_Variant;
	var IsActive : BlackboardID_Bool;
	var EnableExit : BlackboardID_Bool;
	var IsFPP : BlackboardID_Bool;
	var PlaybackSpeed : BlackboardID_Variant;
	var PlaybackDirection : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_EquipmentDataDef extends BlackboardDefinition
{
	var EquipmentData : BlackboardID_Variant;
	var UIjailbreakData : BlackboardID_Variant;
	var ammoLooted : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_HUDButtonHintDef extends BlackboardDefinition
{
	var ActionsData : BlackboardID_Variant;
}

class UI_PlayerBioMonitorDef extends BlackboardDefinition
{
	var PlayerStatsInfo : BlackboardID_Variant;
	var BuffsList : BlackboardID_Variant;
	var DebuffsList : BlackboardID_Variant;
	var Cooldowns : BlackboardID_Variant;
	var AdrenalineBar : BlackboardID_Float;
	var CurrentNetrunnerCharges : BlackboardID_Int;
	var NetworkChargesCapacity : BlackboardID_Int;
	var NetworkName : BlackboardID_Name;
	var MemoryPercent : BlackboardID_Float;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class FastTRavelSystemDef extends BlackboardDefinition
{
	var DestinationPoint : BlackboardID_Variant;
	var StartingPoint : BlackboardID_Variant;
	var FastTravelStarted : BlackboardID_Bool;
	var FastTravelLoadingScreenStarted : BlackboardID_Bool;
	var FastTravelLoadingScreenFinished : BlackboardID_Bool;
	var LastSubwayGateUsed : BlackboardID_EntityID;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class DeviceBaseBlackboardDef extends BlackboardDefinition
{
	var ActionWidgetsData : BlackboardID_Variant;
	var DeviceWidgetsData : BlackboardID_Variant;
	var UIupdate : BlackboardID_Bool;
	var BreadCrumbElement : BlackboardID_Variant;
	var GlitchData : BlackboardID_Variant;
	var UI_InteractivityBlocked : BlackboardID_Bool;
	var IsInvestigated : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return false;
	}

}

class MasterDeviceBaseBlackboardDef extends DeviceBaseBlackboardDef
{
	var ThumbnailWidgetsData : BlackboardID_Variant;
	var CleanPassword : BlackboardID_Bool;
}

class ComputerDeviceBlackboardDef extends MasterDeviceBaseBlackboardDef
{
	var MailThumbnailWidgetsData : BlackboardID_Variant;
	var FileThumbnailWidgetsData : BlackboardID_Variant;
	var MailWidgetsData : BlackboardID_Variant;
	var FileWidgetsData : BlackboardID_Variant;
	var MenuButtonWidgetsData : BlackboardID_Variant;
	var MainMenuButtonWidgetsData : BlackboardID_Variant;
	var BannerWidgetsData : BlackboardID_Variant;
}

class BackDoorDeviceBlackboardDef extends MasterDeviceBaseBlackboardDef
{
	var isInDefaultState : BlackboardID_Bool;
	var shutdownModule : BlackboardID_Int;
	var bootModule : BlackboardID_Int;
}

class TVDeviceBlackboardDef extends DeviceBaseBlackboardDef
{
	var PreviousChannel : BlackboardID_Int;
	var CurrentChannel : BlackboardID_Int;
}

class NumericDisplayBlackboardDef extends DeviceBaseBlackboardDef
{
	var CurrentNumber : BlackboardID_Int;
	var Direction : BlackboardID_Int;
}

class ArcadeMachineBlackboardDef extends DeviceBaseBlackboardDef
{
}

class ConfessionalBlackboardDef extends DeviceBaseBlackboardDef
{
	var IsConfessing : BlackboardID_Bool;
}

class JukeboxBlackboardDef extends DeviceBaseBlackboardDef
{
	var IsPlaying : BlackboardID_Bool;
}

class LcdScreenBlackBoardDef extends DeviceBaseBlackboardDef
{
	var MessegeData : BlackboardID_Variant;
}

class NcartTimetableBlackboardDef extends DeviceBaseBlackboardDef
{
	var TimeToDepart : BlackboardID_Int;
	var NextTrainLine : BlackboardID_Int;
}

class IntercomBlackboardDef extends DeviceBaseBlackboardDef
{
	var DisplayString : BlackboardID_String;
	var EnableActions : BlackboardID_Bool;
	var Status : BlackboardID_Variant;
}

class DataTermDeviceBlackboardDef extends DeviceBaseBlackboardDef
{
	var fastTravelPoint : BlackboardID_Variant;
	var triggerWorldMap : BlackboardID_Bool;
	var passengerCount : BlackboardID_Int;
	var subwayGateOpen : BlackboardID_Bool;
}

class ElevatorDeviceBlackboardDef extends DeviceBaseBlackboardDef
{
	var CurrentFloor : BlackboardID_String;
	var isPlayerScanned : BlackboardID_Bool;
	var isPaused : BlackboardID_Bool;
}

class InteractiveDeviceBlackboardDef extends DeviceBaseBlackboardDef
{
	var showAd : BlackboardID_Bool;
	var showVendor : BlackboardID_Bool;
}

class VendingMachineDeviceBlackboardDef extends DeviceBaseBlackboardDef
{
	var ActionStatus : BlackboardID_Variant;
	var SoldOut : BlackboardID_Bool;
}

class ElectricBoxBlackboardDef extends DeviceBaseBlackboardDef
{
	var isOverriden : BlackboardID_Bool;
}

class NetworkBlackboardDef extends BlackboardDefinition
{
	var MinigameDef : BlackboardID_Variant;
	var NetworkName : BlackboardID_String;
	var NetworkTDBID : BlackboardID_Variant;
	var DevicesCount : BlackboardID_Int;
	var DeviceID : BlackboardID_EntityID;
	var OfficerBreach : BlackboardID_Bool;
	var SuicideBreach : BlackboardID_Bool;
	var RemoteBreach : BlackboardID_Bool;
	var ItemBreach : BlackboardID_Bool;
	var Attempt : BlackboardID_Int;
	var SelectedMinigameDef : BlackboardID_Variant;
	var PersonalLinkStatus : BlackboardID_Int;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class StorageBlackboardDef extends BlackboardDefinition
{
	var StorageData : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class MenuEventBlackboardDef extends BlackboardDefinition
{
	var MenuEventToTrigger : BlackboardID_Name;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class SniperNestDeviceBlackboardDef extends BlackboardDefinition
{
	var IsInTheSniperNest : BlackboardID_Bool;
	var FastForwardToZoom4 : BlackboardID_Bool;
	var SniperNestDefaultSpeedMultiplier : BlackboardID_Float;
	var SniperNestZoomedSpeedMultiplier : BlackboardID_Float;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class TokenUpgradedCyberwareBlackboardDef extends BlackboardDefinition
{
	var CyberwareTypes : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_ComDeviceDef extends BlackboardDefinition
{
	var comDeviceSetStatusText : BlackboardID_Name;
	var openMessageRequest : BlackboardID_Uint;
	var closeMessageRequest : BlackboardID_Int;
	var showingMessage : BlackboardID_Int;
	var PhoneCallInformation : BlackboardID_Variant;
	var PhoneStyle_PlacidePhone : BlackboardID_Bool;
	var PhoneStyle_VideoCallInterupt : BlackboardID_Bool;
	var PhoneStyle_Minimized : BlackboardID_Bool;
	var isDisplayingMessage : BlackboardID_Bool;
	var ContactsActive : BlackboardID_Bool;
	var SmsMessengerActive : BlackboardID_Bool;
	var MessageToOpenId : BlackboardID_Name;
	var PhoneEnabled : BlackboardID_Bool;
	var PhoneVisibility : BlackboardID_Variant;
	var ActivatePhoneElements : BlackboardID_Uint;
	var MessageToOpenHash : BlackboardID_Int;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_ScannerDef extends BlackboardDefinition
{
	var Scannables : BlackboardID_Variant;
	var CurrentProgress : BlackboardID_Float;
	var CurrentState : BlackboardID_Variant;
	var ProgressBarText : BlackboardID_String;
	var ScannedObject : BlackboardID_EntityID;
	var ScannerMode : BlackboardID_Variant;
	var scannerTooltip : BlackboardID_Int;
	var scannerChangeTargetTooltipVisibility : BlackboardID_Bool;
	var scannerData : BlackboardID_Variant;
	var scannerObjectDistance : BlackboardID_Float;
	var scannerObjectStats : BlackboardID_Variant;
	var scannerQuickHackActionId : BlackboardID_Int;
	var scannerQuickHackActionStarted : BlackboardID_Bool;
	var scannerQuickHackTime : BlackboardID_Float;
	var exclusiveFocusActive : BlackboardID_Bool;
	var LastTaggedTarget : BlackboardID_Variant;
	var skillCheckInfo : BlackboardID_Variant;
	var ShowHudHintMessege : BlackboardID_Bool;
	var HudHintMessegeContent : BlackboardID_String;
	var UIVisible : BlackboardID_Bool;
	var ScannerLookAt : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_ScannerModulesDef extends BlackboardDefinition
{
	var ScannerName : BlackboardID_Variant;
	var ScannerHealth : BlackboardID_Variant;
	var ScannerLevel : BlackboardID_Variant;
	var ScannerAuthorization : BlackboardID_Variant;
	var ScannerRarity : BlackboardID_Variant;
	var ScannerArchetype : BlackboardID_Variant;
	var ScannerFaction : BlackboardID_Variant;
	var ScannerWeaponBasic : BlackboardID_Variant;
	var ScannerWeaponDetailed : BlackboardID_Variant;
	var ScannerVulnerabilities : BlackboardID_Variant;
	var ScannerSquadInfo : BlackboardID_Variant;
	var ScannerResistances : BlackboardID_Variant;
	var ScannerAbilities : BlackboardID_Variant;
	var ScannerAttitude : BlackboardID_Variant;
	var ScannerBountySystem : BlackboardID_Variant;
	var ScannerDeviceStatus : BlackboardID_Variant;
	var ScannerNetworkLevel : BlackboardID_Variant;
	var ScannerNetworkStatus : BlackboardID_Variant;
	var ScannerConnections : BlackboardID_Variant;
	var ScannerDescription : BlackboardID_Variant;
	var ScannerSkillChecks : BlackboardID_Variant;
	var ScannerVehicleName : BlackboardID_Variant;
	var ScannerVehicleManufacturer : BlackboardID_Variant;
	var ScannerVehicleProductionYears : BlackboardID_Variant;
	var ScannerVehicleDriveLayout : BlackboardID_Variant;
	var ScannerVehicleHorsepower : BlackboardID_Variant;
	var ScannerVehicleMass : BlackboardID_Variant;
	var ScannerVehicleState : BlackboardID_Variant;
	var ScannerVehicleInfo : BlackboardID_Variant;
	var ScannerQuickHackDescription : BlackboardID_Variant;
	var ObjectType : BlackboardID_Int;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_WantedBarDef extends BlackboardDefinition
{
	var CurrentWantedLevel : BlackboardID_Int;
	var DeescalationStages : BlackboardID_Int;
	var CurrentChaseState : BlackboardID_Name;
	var BlinkingStarsDurationTime : BlackboardID_Float;
	var IsDogtown : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class HUDManagerDef extends BlackboardDefinition
{
	var ShowHudHintMessege : BlackboardID_Bool;
	var HudHintMessegeContent : BlackboardID_String;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_HUDProgressBarDef extends BlackboardDefinition
{
	var TimerID : BlackboardID_Variant;
	var Header : BlackboardID_String;
	var BottomText : BlackboardID_String;
	var CompletedText : BlackboardID_String;
	var FailedText : BlackboardID_String;
	var Active : BlackboardID_Bool;
	var Progress : BlackboardID_Float;
	var ProgressBump : BlackboardID_Float;
	var MessageType : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_HUDSignalProgressBarDef extends BlackboardDefinition
{
	var TimerID : BlackboardID_Variant;
	var State : BlackboardID_Uint;
	var Progress : BlackboardID_Float;
	var SignalStrength : BlackboardID_Float;
	var Orientation : BlackboardID_Uint;
	var Appearance : BlackboardID_Name;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_HUDCountdownTimerDef extends BlackboardDefinition
{
	var TimerID : BlackboardID_Variant;
	var Active : BlackboardID_Bool;
	var Progress : BlackboardID_Float;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_HotkeysDef extends BlackboardDefinition
{
	var ModifiedHotkey : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_NPCNextToTheCrosshairDef extends BlackboardDefinition
{
	var NameplateData : BlackboardID_Variant;
	var BuffsList : BlackboardID_Variant;
	var DebuffsList : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_NameplateDataDef extends BlackboardDefinition
{
	var EntityID : BlackboardID_Variant;
	var IsVisible : BlackboardID_Bool;
	var HeightOffset : BlackboardID_Float;
	var DamageProjection : BlackboardID_Int;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_DamageInfoDef extends BlackboardDefinition
{
	var DamageList : BlackboardID_Variant;
	var KillList : BlackboardID_Variant;
	var DigitsMode : BlackboardID_Variant;
	var DigitsInterpolationOn : BlackboardID_Bool;
	var DigitsStickingMode : BlackboardID_Variant;
	var HitIndicatorEnabled : BlackboardID_Bool;
	var DmgIndicatorMode : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_InterfaceOptionsDef extends BlackboardDefinition
{
	var CrowdsOnMinimap : BlackboardID_Bool;
	var ObjectMarkersEnabled : BlackboardID_Bool;
	var NPCNamesEnabled : BlackboardID_Bool;
	var NPCNameplatesEnabled : BlackboardID_Bool;
	var HUDMarkersEnabled : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_FastForwardDef extends BlackboardDefinition
{
	var FastForwardAvailable : BlackboardID_Bool;
	var FastForwardActive : BlackboardID_Bool;
}

class VendorRegisterBlackBoardDef extends BlackboardDefinition
{
	var vendors : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_CompassInfoDef extends BlackboardDefinition
{
	var NorthOffset : BlackboardID_Float;
	var SouthOffset : BlackboardID_Float;
	var EastOffset : BlackboardID_Float;
	var WestOffset : BlackboardID_Float;
	var Pins : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_ActiveWeaponDataDef extends BlackboardDefinition
{
	var WeaponRecordID : BlackboardID_Variant;
	var BulletSpread : BlackboardID_Vector2;
	var SmartGunParams : BlackboardID_Variant;
	var TargetHitEvent : BlackboardID_Variant;
	var ShootEvent : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_TargetingInfoDef extends BlackboardDefinition
{
	var CurrentVisibleTarget : BlackboardID_EntityID;
	var CrosshairRaycastTarget : BlackboardID_EntityID;
	var VisibleTargetDistance : BlackboardID_Float;
	var VisibleTargetAttitude : BlackboardID_Int;
	var CurrentObstructedTarget : BlackboardID_EntityID;
	var ObstructedTargetDistance : BlackboardID_Float;
	var ObstructedTargetAttitude : BlackboardID_Int;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_QuickSlotsDataDef extends BlackboardDefinition
{
	var UIRadialContextRequest : BlackboardID_Bool;
	var UIRadialContextRightStickAngle : BlackboardID_Float;
	var leftStick : BlackboardID_Vector4;
	var DPadCommand : BlackboardID_Variant;
	var KeyboardCommand : BlackboardID_Variant;
	var WheelInteractionStarted : BlackboardID_Variant;
	var WheelInteractionEnded : BlackboardID_Variant;
	var CyberwareAssignmentComplete : BlackboardID_Bool;
	var WheelAssignmentComplete : BlackboardID_Bool;
	var quickSlotsStructure : BlackboardID_Variant;
	var activeQuickSlotItem : BlackboardID_Variant;
	var quickSlotsActiveWeaponIndex : BlackboardID_Int;
	var quickhackPanelOpen : BlackboardID_Bool;
	var quickHackDescritpionVisible : BlackboardID_Bool;
	var quickHackDataSelected : BlackboardID_Variant;
	var quickhackPanelKeepContext : BlackboardID_Bool;
	var dpadHintRefresh : BlackboardID_Bool;
	var containerConsumable : BlackboardID_Variant;
	var consumableBeingUsed : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_VisionModeDef extends BlackboardDefinition
{
	var isEnabled : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

abstract class CustomBlackboardDef extends BlackboardDefinition
{
}

class CustomCentaurBlackboardDef extends CustomBlackboardDef
{
	var ShieldState : BlackboardID_Int;
	var WeakSpotHitTimeStamp : BlackboardID_Float;
	var ShieldTarget : BlackboardID_EntityID;
	var WoundedStateHPThreshold : BlackboardID_Float;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return false;
	}

}

class UI_MapDef extends BlackboardDefinition
{
	var currentLocation : BlackboardID_String;
	var currentLocationEnumName : BlackboardID_String;
	var newLocationDiscovered : BlackboardID_Bool;
	var currentState : BlackboardID_String;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_CustomQuestNotificationDef extends BlackboardDefinition
{
	var data : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_HudTooltipDef extends BlackboardDefinition
{
	var ItemId : BlackboardID_Variant;
	var ShowTooltip : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_HudButtonHelpDef extends BlackboardDefinition
{
	var button1_Text : BlackboardID_String;
	var button1_Icon : BlackboardID_Name;
	var button2_Text : BlackboardID_String;
	var button2_Icon : BlackboardID_Name;
	var button3_Text : BlackboardID_String;
	var button3_Icon : BlackboardID_Name;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_NotificationsDef extends BlackboardDefinition
{
	var WarningMessage : BlackboardID_Variant;
	var OnscreenMessage : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_CpoCharacterSelectionDef extends BlackboardDefinition
{
	var SelectionMenuVisible : BlackboardID_Bool;
	var CharacterRecordId : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_CrosshairDef extends BlackboardDefinition
{
	var EnemyNeutralized : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

abstract class AIBlackboardDef extends BlackboardDefinition
{
}

class AIShootingDataDef extends AIBlackboardDef
{
	var shootingPatternPackage : BlackboardID_Variant;
	var shootingPattern : BlackboardID_Variant;
	var patternList : BlackboardID_Variant;
	var rightArmLookAtLimitReached : BlackboardID_Int;
	var totalShotsFired : BlackboardID_Int;
	var shotsInBurstFired : BlackboardID_Int;
	var desiredNumberOfShots : BlackboardID_Int;
	var nextShotTimeStamp : BlackboardID_Float;
	var shotTimeStamp : BlackboardID_Float;
	var maxChargedTimeStamp : BlackboardID_Float;
	var chargeStartTimeStamp : BlackboardID_Float;
	var pauseConditionCheckTimeStamp : BlackboardID_Float;
	var lastChargeLevel : BlackboardID_Float;
	var fullyCharged : BlackboardID_Bool;
	var weaponOverheated : BlackboardID_Bool;
	var requestedTriggerMode : BlackboardID_Int;
	var shootingFromCar : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return false;
	}

	public export const function Initialize( blackboard : IBlackboard )
	{
		blackboard.SetInt( totalShotsFired, 0 );
	}

}

class AICoverDataDef extends AIBlackboardDef
{
	var exposureMethod : BlackboardID_Name;
	var fallbackExposureMethod : BlackboardID_Name;
	var lastAvailableMethods : BlackboardID_Uint;
	var currentlyExposed : BlackboardID_Bool;
	var commandExposureMethods : BlackboardID_Variant;
	var commandCoverOverride : BlackboardID_Bool;
	var currentCoverStance : BlackboardID_Name;
	var desiredCoverStance : BlackboardID_Name;
	var lastCoverPreset : BlackboardID_Name;
	var lastInitialCoverPreset : BlackboardID_Name;
	var lastCoverChangeThreshold : BlackboardID_Float;
	var lastVisibilityCheckTimestamp : BlackboardID_Float;
	var currentRing : BlackboardID_Variant;
	var lastCoverRing : BlackboardID_Variant;
	var lastDebugCoverPreset : BlackboardID_Int;
	var firstCoverEvaluationDone : BlackboardID_Bool;
	var startCoverEvaluationTimeStamp : BlackboardID_Float;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return false;
	}

	public export const function Initialize( blackboard : IBlackboard )
	{
		blackboard.SetVariant( currentRing, gamedataAIRingType.Invalid );
		blackboard.SetVariant( lastCoverRing, gamedataAIRingType.Invalid );
		blackboard.SetFloat( startCoverEvaluationTimeStamp, -1.0 );
	}

}

class AIPatrolDef extends AIBlackboardDef
{
	var patrolPathOverride : BlackboardID_Variant;
	var patrolWithWeapon : BlackboardID_Bool;
	var forceAlerted : BlackboardID_Bool;
	var sprint : BlackboardID_Bool;
	var selectedPath : BlackboardID_Variant;
	var closestPathPoint : BlackboardID_Vector4;
	var workspotData : BlackboardID_Variant;
	var workspotEntryPosition : BlackboardID_Vector4;
	var workspotExitPosition : BlackboardID_Vector4;
	var patrolAction : BlackboardID_Variant;
	var patrolInProgress : BlackboardID_Bool;
}

class AIAlertedPatrolDef extends AIBlackboardDef
{
	var patrolPathOverride : BlackboardID_Variant;
	var sprint : BlackboardID_Bool;
	var selectedPath : BlackboardID_Variant;
	var closestPathPoint : BlackboardID_Vector4;
	var workspotData : BlackboardID_Variant;
	var workspotEntryPosition : BlackboardID_Vector4;
	var workspotExitPosition : BlackboardID_Vector4;
	var patrolAction : BlackboardID_Variant;
	var forceAlerted : BlackboardID_Bool;
	var patrolInProgress : BlackboardID_Bool;
}

class UI_ActivityLogDef extends BlackboardDefinition
{
	var activityLogHide : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_LevelUpDef extends BlackboardDefinition
{
	var level : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class AIActionDataDef extends AIBlackboardDef
{
	var ownerMeleeAttackBlockedCount : BlackboardID_Int;
	var ownerMeleeAttackParriedCount : BlackboardID_Int;
	var ownerMeleeAttackDodgedCount : BlackboardID_Int;
	var ownerLastAttackTimeStamp : BlackboardID_Float;
	var ownerLastAttackName : BlackboardID_Name;
	var ownerInTumble : BlackboardID_Bool;
	var ownerCurrentAnimVariationSet : BlackboardID_Bool;
	var ownerLastAnimVariationAction : BlackboardID_Variant;
	var ownerLastAnimVariation : BlackboardID_Int;
	var ownerLastBlockAnimVariation : BlackboardID_Int;
	var ownerItemsToEquip : BlackboardID_Variant;
	var ownerItemsUnequipped : BlackboardID_Variant;
	var ownerItemsForceUnequipped : BlackboardID_Variant;
	var ownerLastEquippedItems : BlackboardID_Variant;
	var ownerLastUnequipTimestamp : BlackboardID_Float;
	var ownerEquipItemTime : BlackboardID_Float;
	var ownerEquipDuration : BlackboardID_Float;
	var dropItemOnUnequip : BlackboardID_Bool;
	var archetypeEffectorsApplied : BlackboardID_Bool;
	var ownerTimeDilation : BlackboardID_Float;
	var ownerGlobalTimeDilation : BlackboardID_Float;
	var operationHasBeenProcessed : BlackboardID_Bool;
	var weaponTrailInitialised : BlackboardID_Bool;
	var weaponTrailAborted : BlackboardID_Bool;
	var netrunner : BlackboardID_Variant;
	var netrunnerProxy : BlackboardID_Variant;
	var netrunnerTarget : BlackboardID_Variant;
	var ignoreInCombatMoveCommand : BlackboardID_Bool;
	var avoidLOSTimeStamp : BlackboardID_Float;
	var attackBlocked : BlackboardID_Bool;
	var attackParried : BlackboardID_Bool;
	var lastGrenadeThrowTimestamp : BlackboardID_Float;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return false;
	}

	public export const function Initialize( blackboard : IBlackboard )
	{
		blackboard.SetInt( ownerLastAnimVariation, -1 );
		blackboard.SetFloat( ownerTimeDilation, -1.0 );
		blackboard.SetFloat( ownerGlobalTimeDilation, -1.0 );
		blackboard.SetFloat( lastGrenadeThrowTimestamp, -1.0 );
	}

}

class AIPrereqsDataDef extends AIBlackboardDef
{
	var npcHitTypeTimeout : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return false;
	}

}

class AIActionBossDataDef extends AIBlackboardDef
{
	var excludedWaypointPosition : BlackboardID_Variant;
	var excludedTeleportPosition : BlackboardID_Vector4;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return false;
	}

}

class UI_CodexSystemDef extends BlackboardDefinition
{
	var CodexUpdated : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_ItemModSystemDef extends BlackboardDefinition
{
	var ItemModSystemUpdated : BlackboardID_Variant;
	var ItemModSystemUpgradingInProgress : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class DeviceTakeControlDef extends BlackboardDefinition
{
	var DevicesChain : BlackboardID_Variant;
	var ActiveDevice : BlackboardID_EntityID;
	var IsDeviceWorking : BlackboardID_Bool;
	var ChainLocked : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class TaggedObjectsListDef extends BlackboardDefinition
{
	var taggedObjectsList : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class AdHocAnimationDef extends BlackboardDefinition
{
	var IsActive : BlackboardID_Bool;
	var AnimationIndex : BlackboardID_Int;
	var UseBothHands : BlackboardID_Bool;
	var UnequipWeapon : BlackboardID_Bool;
	var AnimationDuration : BlackboardID_Float;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class QuickMeleeDataDef extends BlackboardDefinition
{
	var NPCHit : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class PlayerSecureAreaDef extends BlackboardDefinition
{
	var inside : BlackboardID_Bool;

	public constexpr const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_VendorDef extends BlackboardDefinition
{
	var VendorData : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_BriefingDef extends BlackboardDefinition
{
	var BriefingToOpen : BlackboardID_String;
	var BriefingSize : BlackboardID_Variant;
	var BriefingAlignment : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_EquipmentDef extends BlackboardDefinition
{
	var itemEquipped : BlackboardID_Variant;
	var lastModifiedArea : BlackboardID_Variant;
	var areaChanged : BlackboardID_Int;
	var areaChangedSlotIndex : BlackboardID_Int;
	var EquipmentInProgress : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_InventoryDef extends BlackboardDefinition
{
	var itemAdded : BlackboardID_Variant;
	var itemRemoved : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_CraftingDef extends BlackboardDefinition
{
	var lastCommand : BlackboardID_Variant;
	var lastItem : BlackboardID_Variant;
	var lastIngredients : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_ItemLogDef extends BlackboardDefinition
{
	var ItemLogItem : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class CW_MuteArmDef extends BlackboardDefinition
{
	var MuteArmActive : BlackboardID_Bool;
	var MuteArmRadius : BlackboardID_Float;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_ChatBoxDef extends BlackboardDefinition
{
	var TextList : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_HUDNarrationLogDef extends BlackboardDefinition
{
	var LastEvent : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_NarrativePlateDef extends BlackboardDefinition
{
	var PlateData : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_CompanionDef extends BlackboardDefinition
{
	var flatHeadSpawned : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_HackingDef extends BlackboardDefinition
{
	var ammoIndicator : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_StealthDef extends BlackboardDefinition
{
	var CombatDebug : BlackboardID_Bool;
	var numberOfCombatants : BlackboardID_Uint;
	var highestDetectionOnPlayer : BlackboardID_Float;
	var highestHostileDetectionOnPlayer : BlackboardID_Float;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class PhotoModeDef extends BlackboardDefinition
{
	var IsActive : BlackboardID_Bool;
	var PlayerHealthState : BlackboardID_Uint;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class GameplaySettingsDef extends BlackboardDefinition
{
	var DisableAutomaticSwitchToVehicleTPP : BlackboardID_Bool;
	var EnableVehicleToggleSummonMode : BlackboardID_Bool;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class InputSchemesDef extends BlackboardDefinition
{
	var Device : BlackboardID_Uint;
	var Scheme : BlackboardID_Uint;
	var InitializedInputHintManagerList : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_TopbarHubMenuDef extends BlackboardDefinition
{
	var IsSubmenuHidden : BlackboardID_Bool;
	var MetaQuestStatus : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class UI_SceneScreenDef extends BlackboardDefinition
{
	var AnimName : BlackboardID_Name;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return false;
	}

}

class UI_PointOfNoReturnRewardScreenDef extends BlackboardDefinition
{
	var Rewards : BlackboardID_Variant;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

class PoliceChaseParamsDef extends BlackboardDefinition
{
	var SearchAreaRadius : BlackboardID_Float;
	var ChasePlayerDistance : BlackboardID_Float;

	public constexpr export const function AutoCreateInSystem() : Bool
	{
		return true;
	}

}

import class AllBlackboardDefinitions extends IScriptable
{
	var PlayerStateMachine : PlayerStateMachineDef;
	var PlayerPerkData : PlayerPerkDataDef;
	var PlayerQuickHackData : PlayerQuickHackDataDef;
	var EffectSharedData : EffectSharedDataDef;
	var FollowNPC : FollowNPCDef;
	var AISquadBlackBoard : AISquadBlackBoardDef;
	var Puppet : PuppetDef;
	var PuppetState : PuppetStateDef;
	var PuppetReaction : PuppetReactionDef;
	var LocalPlayer : PuppetReactionDef;
	var UIGameData : UIGameDataDef;
	var UIInteractions : UIInteractionsDef;
	var Weapon : WeaponDataDef;
	var DeviceTakeControl : DeviceTakeControlDef;
	var TaggedObjectsList : TaggedObjectsListDef;
	var AdHocAnimation : AdHocAnimationDef;
	var QuickMeleeData : QuickMeleeDataDef;
	var Vehicle : VehicleDef;
	var VehicleSummonData : VehicleSummonDataDef;
	var VehiclePurchaseData : VehiclePurchaseDataDef;
	var Braindance : BraindanceBlackboardDef;
	var HackingMinigame : HackingMinigameDef;
	var HackingData : HackingDataDef;
	var AIShooting : AIShootingDataDef;
	var AICover : AICoverDataDef;
	var AIAction : AIActionDataDef;
	var AIPrereqs : AIPrereqsDataDef;
	var AIPatrol : AIPatrolDef;
	var AIAlertedPatrol : AIAlertedPatrolDef;
	var VendorRegister : VendorRegisterBlackBoardDef;
	var AIFollowSlot : AIFollowSlotDef;
	var AIActionBossData : AIActionBossDataDef;
	var UI_System : UI_SystemDef;
	var UI_ActiveVehicleData : UI_ActiveVehicleDataDef;
	var UIWorldBoundaries : UIWorldBoundariesDef;
	var UI_PlayerStats : UI_PlayerStatsDef;
	var UI_EquipmentData : UI_EquipmentDataDef;
	var UI_PlayerBioMonitor : UI_PlayerBioMonitorDef;
	var FastTRavelSystem : FastTRavelSystemDef;
	var UI_ComDevice : UI_ComDeviceDef;
	var UI_Scanner : UI_ScannerDef;
	var UI_ScannerModules : UI_ScannerModulesDef;
	var UI_WantedBar : UI_WantedBarDef;
	var UI_FastForward : UI_FastForwardDef;
	var UI_HUDProgressBar : UI_HUDProgressBarDef;
	var UI_HUDSignalProgressBar : UI_HUDSignalProgressBarDef;
	var UI_HUDCountdownTimer : UI_HUDCountdownTimerDef;
	var UI_Hotkeys : UI_HotkeysDef;
	var DeviceBaseBlackboard : DeviceBaseBlackboardDef;
	var TVDeviceBlackboard : TVDeviceBlackboardDef;
	var ArcadeMachineBlackBoard : ArcadeMachineBlackboardDef;
	var ElectricBoxBlackBoard : ElectricBoxBlackboardDef;
	var LcdScreenBlackBoard : LcdScreenBlackBoardDef;
	var NcartTimetableBlackboard : NcartTimetableBlackboardDef;
	var IntercomBlackboard : IntercomBlackboardDef;
	var ElevatorDeviceBlackboard : ElevatorDeviceBlackboardDef;
	var VendingMachineDeviceBlackboard : VendingMachineDeviceBlackboardDef;
	var InteractiveDeviceBlackboard : InteractiveDeviceBlackboardDef;
	var MasterDeviceBaseBlackboard : MasterDeviceBaseBlackboardDef;
	var ComputerDeviceBlackboard : ComputerDeviceBlackboardDef;
	var DataTermDeviceBlackboard : DataTermDeviceBlackboardDef;
	var NetworkBlackboard : NetworkBlackboardDef;
	var StorageBlackboard : StorageBlackboardDef;
	var BackdoorBlackboard : BackDoorDeviceBlackboardDef;
	var ConfessionalBlackboard : ConfessionalBlackboardDef;
	var JukeboxBlackboard : JukeboxBlackboardDef;
	var MenuEventBlackboard : MenuEventBlackboardDef;
	var NumericDisplay : NumericDisplayBlackboardDef;
	var SniperNestDeviceBlackboard : SniperNestDeviceBlackboardDef;
	var UI_NPCNextToTheCrosshair : UI_NPCNextToTheCrosshairDef;
	var UI_NameplateData : UI_NameplateDataDef;
	var UI_DamageInfo : UI_DamageInfoDef;
	var UI_InterfaceOptions : UI_InterfaceOptionsDef;
	var UI_CompassInfo : UI_CompassInfoDef;
	var UI_ActiveWeaponData : UI_ActiveWeaponDataDef;
	var UI_TargetingInfo : UI_TargetingInfoDef;
	var UI_Notifications : UI_NotificationsDef;
	var LeftHandCyberware : LeftHandCyberwareDataDef;
	var CoverAction : CoverActionDataDef;
	var UI_QuickSlotsData : UI_QuickSlotsDataDef;
	var UI_VisionMode : UI_VisionModeDef;
	var UI_HudTooltip : UI_HudTooltipDef;
	var UI_HudButtonHelp : UI_HudButtonHelpDef;
	var UI_ActivityLog : UI_ActivityLogDef;
	var UI_LevelUp : UI_LevelUpDef;
	var UI_Vendor : UI_VendorDef;
	var UI_Briefing : UI_BriefingDef;
	var UI_ItemModSystem : UI_ItemModSystemDef;
	var UI_CodexSystem : UI_CodexSystemDef;
	var UI_Equipment : UI_EquipmentDef;
	var UI_Inventory : UI_InventoryDef;
	var UI_Crafting : UI_CraftingDef;
	var UI_Map : UI_MapDef;
	var UI_CpoCharacterSelection : UI_CpoCharacterSelectionDef;
	var UI_ChatBox : UI_ChatBoxDef;
	var UI_HUDNarrationLog : UI_HUDNarrationLogDef;
	var UI_NarrativePlate : UI_NarrativePlateDef;
	var UI_Crosshair : UI_CrosshairDef;
	var UI_ItemLog : UI_ItemLogDef;
	var UI_HUDButtonHints : UI_HUDButtonHintDef;
	var UI_Companion : UI_CompanionDef;
	var UI_CustomQuestNotification : UI_CustomQuestNotificationDef;
	var HUD_Manager : HUDManagerDef;
	var UI_Hacking : UI_HackingDef;
	var UI_Stealth : UI_StealthDef;
	var UI_TopbarHubMenu : UI_TopbarHubMenuDef;
	var UI_LocalPlayer : LocalPlayerDef;
	var UI_SceneScreen : UI_SceneScreenDef;
	var UI_PointOfNoReturnRewardScreen : UI_PointOfNoReturnRewardScreenDef;
	var TokenUpgradedCyberwareBlackboard : TokenUpgradedCyberwareBlackboardDef;
	var CombatGadget : CombatGadgetDataDef;
	var Mines : MinesDataDef;
	var DebugData : DebugDataDef;
	var DeviceDebug : DeviceDebugDef;
	var ChargedGrenadesBlackBoard : ChargedGrenadesBlackBoardDef;
	var ChargedHealingBlackBoard : ChargedHealingBlackBoardDef;
	var BlackwallDeathAnim : BlackwallAnimDef;
	var CustomCentaurBlackboard : CustomCentaurBlackboardDef;
	var CW_MuteArm : CW_MuteArmDef;
	var PhotoMode : PhotoModeDef;
	var GameplaySettings : GameplaySettingsDef;
	var InputSchemes : InputSchemesDef;
	var PoliceChaseParams : PoliceChaseParamsDef;
}

