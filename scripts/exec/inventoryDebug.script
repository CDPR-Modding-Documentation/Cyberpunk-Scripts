exec function EquipItem( inst : GameInstance, itemTDBIDStr : String )
{
	var player : PlayerPuppet;
	var itemID : ItemID;
	var itemTDBID : TweakDBID;
	var equipRequest : GameplayEquipRequest;
	var placementSlots : array< weak< AttachmentSlot_Record > >;
	var equipSys : EquipmentSystem;
	player = ( ( PlayerPuppet )( GameInstance.GetPlayerSystem( inst ).GetLocalPlayerControlledGameObject() ) );
	itemTDBID = TDBID.Create( itemTDBIDStr );
	itemID = ItemID.FromTDBID( itemTDBID );
	TweakDBInterface.GetItemRecord( itemTDBID ).PlacementSlots( placementSlots );
	equipRequest = new GameplayEquipRequest;
	equipRequest.itemID = itemID;
	equipRequest.owner = player;
	equipRequest.addToInventory = true;
	equipRequest.blockUpdateWeaponActiveSlots = true;
	equipSys = ( ( EquipmentSystem )( GameInstance.GetScriptableSystemsContainer( inst ).Get( 'EquipmentSystem' ) ) );
	equipSys.QueueRequest( equipRequest );
}

exec function EquipVisuals( gi : GameInstance, itemTDBIDStr : String )
{
	var player : PlayerPuppet;
	var itemID : ItemID;
	var itemTDBID : TweakDBID;
	var equipRequest : EquipVisualsRequest;
	var equipSys : EquipmentSystem;
	player = ( ( PlayerPuppet )( GameInstance.GetPlayerSystem( gi ).GetLocalPlayerControlledGameObject() ) );
	itemTDBID = TDBID.Create( itemTDBIDStr );
	itemID = ItemID.FromTDBID( itemTDBID );
	GameInstance.GetTransactionSystem( gi ).GiveItem( player, itemID, 1 );
	equipRequest = new EquipVisualsRequest;
	equipRequest.itemID = itemID;
	equipRequest.owner = player;
	equipSys = ( ( EquipmentSystem )( GameInstance.GetScriptableSystemsContainer( gi ).Get( 'EquipmentSystem' ) ) );
	equipSys.QueueRequest( equipRequest );
}

exec function UnequipVisuals( gi : GameInstance, areaString : String )
{
	var player : PlayerPuppet;
	var area : gamedataEquipmentArea;
	var unequipRequest : UnequipVisualsRequest;
	var equipSys : EquipmentSystem;
	player = ( ( PlayerPuppet )( GameInstance.GetPlayerSystem( gi ).GetLocalPlayerControlledGameObject() ) );
	area = ( ( gamedataEquipmentArea )( ( ( Int32 )( EnumValueFromString( "gamedataEquipmentArea", areaString ) ) ) ) );
	unequipRequest = new UnequipVisualsRequest;
	unequipRequest.area = area;
	unequipRequest.owner = player;
	unequipRequest.removeItem = true;
	equipSys = ( ( EquipmentSystem )( GameInstance.GetScriptableSystemsContainer( gi ).Get( 'EquipmentSystem' ) ) );
	equipSys.QueueRequest( unequipRequest );
}

exec function EquipItemToHand( inst : GameInstance, itemTDBIDStr : String )
{
	var player : PlayerPuppet;
	var itemID : ItemID;
	var itemTDBID : TweakDBID;
	var equipRequest : EquipRequest;
	var drawItemRequest : DrawItemRequest;
	var placementSlots : array< weak< AttachmentSlot_Record > >;
	var equipSys : EquipmentSystem;
	player = ( ( PlayerPuppet )( GameInstance.GetPlayerSystem( inst ).GetLocalPlayerControlledGameObject() ) );
	itemTDBID = TDBID.Create( itemTDBIDStr );
	itemID = ItemID.FromTDBID( itemTDBID );
	TweakDBInterface.GetItemRecord( itemTDBID ).PlacementSlots( placementSlots );
	equipRequest = new EquipRequest;
	equipRequest.itemID = itemID;
	equipRequest.owner = player;
	equipRequest.addToInventory = true;
	equipSys = ( ( EquipmentSystem )( GameInstance.GetScriptableSystemsContainer( inst ).Get( 'EquipmentSystem' ) ) );
	equipSys.QueueRequest( equipRequest );
	drawItemRequest = new DrawItemRequest;
	drawItemRequest.owner = player;
	drawItemRequest.itemID = itemID;
	equipSys.QueueRequest( drawItemRequest );
}

exec function InstallProgram( inst : GameInstance, part : String, slot : String )
{
	var itemModSys : ItemModificationSystem;
	var installRequest : SwapItemPart;
	var player : weak< GameObject >;
	var partID : ItemID;
	itemModSys = ( ( ItemModificationSystem )( GameInstance.GetScriptableSystemsContainer( inst ).Get( 'ItemModificationSystem' ) ) );
	installRequest = new SwapItemPart;
	player = GameInstance.GetPlayerSystem( inst ).GetLocalPlayerMainGameObject();
	installRequest.obj = player;
	installRequest.baseItem = EquipmentSystem.GetData( player ).GetActiveItem( gamedataEquipmentArea.SystemReplacementCW );
	installRequest.slotID = TDBID.Create( slot );
	partID = ItemID.FromTDBID( TDBID.Create( part ) );
	installRequest.partToInstall = partID;
	GameInstance.GetTransactionSystem( inst ).GiveItem( player, partID, 1 );
	itemModSys.QueueRequest( installRequest );
}

exec function GetItemInSlot( inst : GameInstance, slotString : String )
{
	var slotID : TweakDBID;
	var item : ItemObject;
	slotID = TDBID.Create( slotString );
	item = GameInstance.GetTransactionSystem( inst ).GetItemInSlot( GetPlayer( inst ), slotID );
	Log( item.GetItemData().GetNameAsString() );
}

exec function UnequipItem( inst : GameInstance, stringType : String, stringSlot : String )
{
	var unequipRequest : UnequipRequest;
	var areaType : gamedataEquipmentArea;
	unequipRequest = new UnequipRequest;
	areaType = ( ( gamedataEquipmentArea )( ( ( Int32 )( EnumValueFromString( "gamedataEquipmentArea", stringType ) ) ) ) );
	unequipRequest.areaType = areaType;
	unequipRequest.slotIndex = StringToInt( stringSlot );
	unequipRequest.owner = GetPlayer( inst );
	GameInstance.GetScriptableSystemsContainer( inst ).Get( 'EquipmentSystem' ).QueueRequest( unequipRequest );
}

exec function ClearEquipment( inst : GameInstance )
{
	var clearRequest : ClearEquipmentRequest;
	clearRequest = new ClearEquipmentRequest;
	clearRequest.owner = GetPlayer( inst );
	GameInstance.GetScriptableSystemsContainer( inst ).Get( 'EquipmentSystem' ).QueueRequest( clearRequest );
}

exec function SaveWeaponSet( inst : GameInstance, setName : String )
{
	var saveSetRequest : SaveEquipmentSetRequest;
	saveSetRequest = new SaveEquipmentSetRequest;
	saveSetRequest.owner = GetPlayer( inst );
	saveSetRequest.setName = setName;
	saveSetRequest.setType = EEquipmentSetType.Offensive;
	GameInstance.GetScriptableSystemsContainer( inst ).Get( 'EquipmentSystem' ).QueueRequest( saveSetRequest );
}

exec function SaveArmorSet( inst : GameInstance, setName : String )
{
	var saveSetRequest : SaveEquipmentSetRequest;
	saveSetRequest = new SaveEquipmentSetRequest;
	saveSetRequest.owner = GetPlayer( inst );
	saveSetRequest.setName = setName;
	saveSetRequest.setType = EEquipmentSetType.Defensive;
	GameInstance.GetScriptableSystemsContainer( inst ).Get( 'EquipmentSystem' ).QueueRequest( saveSetRequest );
}

exec function LoadEquipmentSet( inst : GameInstance, setName : String )
{
	var loadSetRequest : LoadEquipmentSetRequest;
	loadSetRequest = new LoadEquipmentSetRequest;
	loadSetRequest.owner = GetPlayer( inst );
	loadSetRequest.setName = setName;
	GameInstance.GetScriptableSystemsContainer( inst ).Get( 'EquipmentSystem' ).QueueRequest( loadSetRequest );
}

exec function DeleteEquipmentSet( inst : GameInstance, setName : String )
{
	var deleteSetRequest : DeleteEquipmentSetRequest;
	deleteSetRequest = new DeleteEquipmentSetRequest;
	deleteSetRequest.owner = GetPlayer( inst );
	deleteSetRequest.setName = setName;
	GameInstance.GetScriptableSystemsContainer( inst ).Get( 'EquipmentSystem' ).QueueRequest( deleteSetRequest );
}

exec function PrintEquipment( inst : GameInstance )
{
	var equipmentSystem : EquipmentSystem;
	equipmentSystem = ( ( EquipmentSystem )( GameInstance.GetScriptableSystemsContainer( inst ).Get( 'EquipmentSystem' ) ) );
	equipmentSystem.PrintEquipment();
}

exec function AddToInventory( inst : GameInstance, itemString : String, optional quantityString : String )
{
	var itemID : ItemID;
	var quantity : Int32;
	var equipmentUIBBRequest : EquipmentUIBBRequest;
	quantity = StringToInt( quantityString );
	if( quantity <= 0 )
	{
		quantity = 1;
	}
	itemID = ItemID.FromTDBID( TDBID.Create( itemString ) );
	GameInstance.GetTransactionSystem( inst ).GiveItem( GetPlayer( inst ), itemID, quantity );
	equipmentUIBBRequest = new EquipmentUIBBRequest;
	equipmentUIBBRequest.owner = GetPlayer( inst );
	GameInstance.GetScriptableSystemsContainer( inst ).Get( 'EquipmentSystem' ).QueueRequest( equipmentUIBBRequest );
}

exec function AddItems( inst : GameInstance, type : String, optional amount : String )
{
	var tweakPath : TweakDBID;
	var itemsArray : array< String >;
	var itemID : ItemID;
	var i : Int32;
	var quantity : Int32;
	quantity = StringToInt( amount, 1 );
	tweakPath = TDBID.Create( ( "Debug." + type ) + ".items" );
	itemsArray = TDB.GetStringArray( tweakPath );
	for( i = 0; i <= itemsArray.Size(); i += 1 )
	{
		itemID = ItemID.FromTDBID( TDBID.Create( itemsArray[ i ] ) );
		GameInstance.GetTransactionSystem( inst ).GiveItem( GetPlayer( inst ), itemID, quantity );
	}
}

exec function AddRecord( inst : GameInstance, tweak : String )
{
	var codexSystem : CodexSystem;
	var addRecordRequest : CodexAddRecordRequest;
	codexSystem = ( ( CodexSystem )( GameInstance.GetScriptableSystemsContainer( inst ).Get( 'CodexSystem' ) ) );
	addRecordRequest = new CodexAddRecordRequest;
	addRecordRequest.codexRecordID = TDBID.Create( tweak );
	codexSystem.QueueRequest( addRecordRequest );
}

exec function UnlockRecord( inst : GameInstance, tweak : String )
{
	var codexSystem : CodexSystem;
	var unlockRecordRequest : CodexUnlockRecordRequest;
	codexSystem = ( ( CodexSystem )( GameInstance.GetScriptableSystemsContainer( inst ).Get( 'CodexSystem' ) ) );
	unlockRecordRequest = new CodexUnlockRecordRequest;
	unlockRecordRequest.codexRecordID = TDBID.Create( tweak );
	codexSystem.QueueRequest( unlockRecordRequest );
}

exec function PrintCodex( inst : GameInstance )
{
	var codexSystem : CodexSystem;
	var codexPrintRecordsRequest : CodexPrintRecordsRequest;
	codexSystem = ( ( CodexSystem )( GameInstance.GetScriptableSystemsContainer( inst ).Get( 'CodexSystem' ) ) );
	codexPrintRecordsRequest = new CodexPrintRecordsRequest;
	codexSystem.QueueRequest( codexPrintRecordsRequest );
}

exec function SM( gi : GameInstance )
{
	var crack : CrackAction;
	crack = new CrackAction;
	crack.CompleteAction( gi );
}

